{"version":3,"sources":["assets/images/drop-down-black.svg","assets/images/drop-down.svg","assets/images/mobile-menu.svg","assets/images/up.svg","assets/images/down.svg","assets/images/settings.svg","assets/images/add.svg","redux/actions/types/types.js","redux/reducers/users.js","redux/reducers/rootReducer.js","redux/storeConfig/store.js","config/index.js","redux/actions/users/registration.js","components/login.js","components/private-route.js","components/logout-modal.js","components/header.js","redux/actions/users/publisher.js","components/country-list.js","components/add-user.js","redux/actions/users/management.js","components/modal-delete-user.js","components/payment-modal.js","components/user-list.js","redux/actions/users/get-data-site.js","components/modal-delete-album.js","components/add-album.js","components/assign-album.js","components/publisher-album-list.js","components/publisher-track-list.js","components/user/user-reports.js","components/user/user-payment.js","components/user/user-track-list.js","components/user/user-settings.js","components/body.js","app.js","serviceWorker.js","index.js","config/config.js","assets/images/view.svg","assets/images/edit.svg","assets/images/bin-28.svg","assets/images/update.svg"],"names":["module","exports","SHOW_SPINNING","initialState","spinning","msg_user_error","msg_registration","msg_create_publisher","msg_publisher_error","getUser_list","msg_get_users","msg_user_delete","get_user","msg_user","getAll_users","get_album_list","msg_album_list_error","msg_create_album","get_registered_albums","msg_registered_albums","msg_assign_albums","msg_error_assign_albums","get_album_byId","msg_album_byId","get_track_list","msg_error_tracks","msg_track_update","msg_paid","rootReducer","combineReducers","users","state","action","type","get_search_users","payload","msg_album_delete","middleware","thunk","store","createStore","compose","applyMiddleware","reset","dispatch","Login","props","login","data","email","password","onChange","e","setState","target","id","value","onInputAlbumId","code","document","activeElement","getElementById","focus","tmr","prevProps","prevState","snapshot","this","toast","clearTimeout","setTimeout","window","location","href","console","log","msg","msg_array","msg_login_email","push","msg_login_password","length","k","className","style","display","placeholder","onKeyUp","keyCode","required","onClick","React","Component","connect","axios","post","config","then","res","temp","results","localStorage","setItem","_id","name","role","token","catch","err","response","error","component","rest","auth","loggedIn","getItem","render","undefined","to","LogOut","Cancel","handleClose","logOut","showHideClassName","show","Header","assignMenu","assignVisible","userVisible","menuVisible","toggleMenu","userMenu","handleScroll","scrollY","scrolling","onLink","showModal","hideModal","addEventListener","removeEventListener","src","require","alt","overflowY","maxHeight","getPublisherById","CountriesList","AddUser","onPhoneChange","parseFloat","onInitial","userId","user_edit","phone","origin_password","confirm_password","country","bank_info","currency_type","SYMBOL","onClickInitial","onSelectCountry","onSave","createPublisher","role_id","currency","flag","onUpdate","onInput","match","params","user","key","disabled","map","item","CURRENCY","history","goBack","instance","create","baseURL","timeout","headers","resetManagement","getTrackListById","updatePaid","DeleteUser","onDelete","deleteUser","PaymentUpdate","paid_amount","detail","paid_date","Date","onPaymentUpdate","publisher_id","comments","date","padding","showTimeSelect","dateFormat","selected","maxDate","getTime","timeIntervals","handleDate","UserList","onUserList","getUserList","current_page","page_neighbours","pagination","onPageClick","scrollTo","onEdit","delete_id","showPaymentModal","showPayment","payment_item","hidePaymentModal","onView","onSearchKeyUp","onSearchUser","user_name","searchFilterUsers","page_num","flag_edit","user_id","list","pageArray","start_page","end_page","registered_date","toLocaleString","year","month","day","hour","minute","current_paid","owed_amount","total_amount","width","height","viewBox","fill","xmlns","d","fillOpacity","total_page","resetList","getAssignedAlbumsById","DeleteAlbum","albums","deleteAlbum","tracks","deleteTrack","self","path","AddAlbum","getDataFromSite","link","language","getAlbumListFromSite","onCount","allChecked","new_checked","onLanguage","action_flag","onCalcPageArray","Math","max","min","album_list","delete_album_id","album_id","flag_input","get_album","onAddAlbum","addAlbumFromSite","lang","addTrackFromSite","send_tracks","i","url","download","title","album","tracks_url","onShowDeleteModal","hideDeleteModal","onCheckBox","JSON","parse","stringify","checked","splice","indexOf","onActionClick","onAllCheck","onAlbumId","getByAlbumId","getAlbumByIdFromSite","onBack","bind","Object","keys","toString","marginLeft","marginRight","thumbnail_images","full","buttons","thumbnail","dangerouslySetInnerHTML","__html","taxonomy_artists","paddingTop","includes","paddingLeft","AssignAlbum","getRegisteredAlbumList","album_ids","onSelectUser","temp_ids","onAssign","assignAlbumsToUser","search_id","searchRegisteredAlbum","all_users","getAllUsers","artists","PublisherAlbums","unassignAlbumsToUser","onShowMore","show_flag","price","updateAlbumPayment","publisher_name","paid_history","reverse","updated_date","loading","marginTop","amount_per_one","paid_comment","slice","PublisherTracks","getInitialTrackList","array","slug","split","updateTrackPayment","track_name","onExtraClick","addPaymentInfo","track_url","platform","version","onShowTableContents","table_show","onShowDetail","detail_show","detail_item","listById","full_thumbnail","details","ip_address","price_per_track","played_date","UserReports","UserPayment","exportTableToCSV","filename","csv","rows","querySelectorAll","row","cols","j","innerText","join","downloadCSV","csvFile","downloadLink","Blob","createElement","URL","createObjectURL","body","appendChild","click","paid_log","print","UserTrackList","UserSettings","updatePublisher","Body","UserAgreement","App","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ceeb477.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drop-down-black.fadc6a17.svg\";","module.exports = __webpack_public_path__ + \"static/media/drop-down.df790f72.svg\";","module.exports = __webpack_public_path__ + \"static/media/mobile-menu.845a9ae0.svg\";","module.exports = __webpack_public_path__ + \"static/media/up.23618932.svg\";","module.exports = __webpack_public_path__ + \"static/media/down.1155cc9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.66f059fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.724f5c69.svg\";","export const SHOW_SPINNING = \"SHOW_SPINNING\";\r\nexport const USER_ERROR = \"USER_ERROR\";\r\nexport const USER_REGISTRATION = \"USER_REGISTRATION\";\r\nexport const CREATE_PUBLISHER = \"CREATE_PUBLISHER\";\r\nexport const ERROR_CREATE_PUBLISHER = \"ERROR_CREATE_PUBLISHER\";\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const GET_USER_ERROR = \"GET_USER_ERROR\";\r\nexport const DELETE_USER = \"DELETE_USER\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const ERROR_USER = \"ERROR_USER\";\r\nexport const GET_ALL_USERS = \"GET_ALL_USERS\";\r\n/**\r\n * Get from the existing site\r\n */\r\nexport const GET_EXISTING_ALBUM = \"GET_EXISTING_ALBUM\";\r\nexport const ERROR_ALBUM_LIST = \"ERROR_ALBUM_LIST\";\r\n\r\nexport const GET_ALBUM_BYID = \"GET_ALBUM_BYID\";\r\nexport const ERROR_ALBUM_BYID = \"ERROR_ALBUM_BYID\";\r\n\r\n/**\r\n * Add/Delete Album\r\n */\r\nexport const ADD_ALBUM = \"ADD_ALBUM\";\r\nexport const DELETE_ALBUM = \"DELETE_ALBUM\";\r\n\r\n/**\r\n * Gettting the registered album list\r\n */\r\nexport const GET_REGISTERED_ALBUMS = \"GET_REGISTERED_ALBUMS\";\r\nexport const ERROR_REGISTERED_ALBUM_LIST = \"ERROR_REGISTERED_ALBUM_LIST\";\r\n\r\n/**\r\n * Assigning Albums\r\n */\r\nexport const ERROR_ASSIGN_ALBUMS = \"ERROR_ASSIGN_ALBUMS\";\r\nexport const ASSIGN_ALBUMS = \"ASSIGN_ALBUMS\";\r\n\r\n/**\r\n * Getting Track list by publisher_id and album_id\r\n */\r\nexport const GET_TRACK_LIST = \"GET_TRACK_LIST\";\r\nexport const ERROR_TRACK_LIST = \"ERROR_TRACK_LIST\";\r\nexport const TRACK_UPDATE_PAYMENT = 'TRACK_UPDATE_PAYMENT';\r\n\r\nexport const UPDATE_PAID = \"UPDATE_PAID\";\r\nexport const GET_SEARCH_USERS = \"GET_SEARCH_USERS\";\r\n\r\n","import {\r\n    SHOW_SPINNING,\r\n    USER_ERROR,\r\n    USER_REGISTRATION,\r\n    CREATE_PUBLISHER,\r\n    ERROR_CREATE_PUBLISHER,\r\n    GET_USER_ERROR,\r\n    GET_USERS,\r\n    DELETE_USER,\r\n    GET_USER,\r\n    ERROR_USER,\r\n    GET_ALL_USERS,\r\n\r\n    GET_EXISTING_ALBUM,\r\n    ERROR_ALBUM_LIST,\r\n    ADD_ALBUM,\r\n    DELETE_ALBUM,\r\n\r\n    GET_REGISTERED_ALBUMS,\r\n    ERROR_REGISTERED_ALBUM_LIST,\r\n\r\n    ASSIGN_ALBUMS,\r\n    ERROR_ASSIGN_ALBUMS,\r\n\r\n    GET_ALBUM_BYID,\r\n    ERROR_ALBUM_BYID,\r\n    GET_TRACK_LIST,\r\n    ERROR_TRACK_LIST,\r\n\r\n    TRACK_UPDATE_PAYMENT,\r\n    UPDATE_PAID,\r\n    GET_SEARCH_USERS,\r\n} from \"../actions/types/types\"\r\n\r\nconst initialState = {\r\n    spinning: '',\r\n    msg_user_error: '',\r\n    msg_registration: {},\r\n    msg_create_publisher: '',\r\n    msg_publisher_error: '',\r\n    getUser_list: '',\r\n    msg_get_users: '',\r\n    msg_user_delete: '',\r\n    get_user: '',\r\n    msg_user: '',\r\n    getAll_users: '',\r\n\r\n    get_album_list: '',\r\n    msg_album_list_error: '',\r\n    msg_create_album: '',\r\n\r\n    get_registered_albums: '',\r\n    msg_registered_albums: '',\r\n\r\n    msg_assign_albums: '',\r\n    msg_error_assign_albums: '',\r\n\r\n    get_album_byId: '',\r\n    msg_album_byId: '',\r\n    get_track_list: '',\r\n    msg_error_tracks: '',\r\n\r\n    msg_track_update: '',\r\n    msg_paid: '',\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_SEARCH_USERS:\r\n            return {\r\n                ...state,\r\n                get_search_users: action.payload,\r\n            };\r\n        case UPDATE_PAID:\r\n            return {\r\n                ...state,\r\n                msg_paid: action.payload,\r\n            };\r\n        case TRACK_UPDATE_PAYMENT:\r\n            return {\r\n                ...state,\r\n                msg_track_update: action.payload,\r\n            };\r\n        case GET_TRACK_LIST:\r\n            return {\r\n                ...state,\r\n                get_track_list: action.payload,\r\n            };\r\n        case ERROR_TRACK_LIST:\r\n            return {\r\n                ...state,\r\n                msg_error_tracks: action.payload,\r\n            };\r\n        case GET_ALBUM_BYID:\r\n            return {\r\n                ...state,\r\n                get_album_byId: action.payload,\r\n            };\r\n        case ERROR_ALBUM_BYID:\r\n            return {\r\n                ...state,\r\n                msg_album_byId: action.payload,\r\n            };\r\n        case ASSIGN_ALBUMS:\r\n            return {\r\n                ...state,\r\n                msg_assign_albums: action.payload,\r\n            };\r\n        case ERROR_ASSIGN_ALBUMS:\r\n            return {\r\n                ...state,\r\n                msg_error_assign_albums: action.payload,\r\n            };\r\n        case GET_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                getAll_users: action.payload,\r\n            };\r\n        case GET_REGISTERED_ALBUMS:\r\n            return {\r\n                ...state,\r\n                get_registered_albums: action.payload,\r\n            };\r\n        case ERROR_REGISTERED_ALBUM_LIST:\r\n            return {\r\n                ...state,\r\n                msg_registered_albums: action.payload,\r\n            };\r\n        case DELETE_ALBUM:\r\n            return {\r\n                ...state,\r\n                msg_album_delete: action.payload,\r\n            };\r\n        case ADD_ALBUM:\r\n            return {\r\n                ...state,\r\n                msg_create_album: action.payload,\r\n            };\r\n        case GET_EXISTING_ALBUM:\r\n            return {\r\n                ...state,\r\n                get_album_list: action.payload,\r\n            };\r\n        case ERROR_ALBUM_LIST:\r\n            return {\r\n                ...state,\r\n                msg_album_list_error: action.payload,\r\n            };\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                get_user: action.payload,\r\n            };\r\n        case ERROR_USER:\r\n            return {\r\n                ...state,\r\n                msg_user: action.payload,\r\n            };\r\n        case DELETE_USER:\r\n            return {\r\n                ...state,\r\n                msg_user_delete: action.payload,\r\n            };\r\n        case GET_USERS:\r\n            return {\r\n                ...state,\r\n                getUser_list: action.payload,\r\n            };\r\n        case GET_USER_ERROR:\r\n            return {\r\n                ...state,\r\n                msg_get_users: action.payload,\r\n            };\r\n        case ERROR_CREATE_PUBLISHER:\r\n            return {\r\n                ...state,\r\n                msg_publisher_error: action.payload,\r\n            };\r\n        case CREATE_PUBLISHER:\r\n            return {\r\n                ...state,\r\n                msg_create_publisher: action.payload,\r\n            };\r\n        case SHOW_SPINNING:\r\n            return {\r\n                ...state,\r\n                spinning: action.payload,\r\n            };\r\n        case USER_REGISTRATION:\r\n            return {\r\n                ...state,\r\n                msg_registration: action.payload,\r\n            };\r\n\r\n        case USER_ERROR:\r\n            return {\r\n                ...state,\r\n                msg_user_error: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","// import external modules\r\nimport { combineReducers } from \"redux\";\r\nimport users from \"./users\";\r\n\r\nconst rootReducer = combineReducers({\r\n    users: users,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)\r\n    )\r\n);\r\n\r\nexport { store };","export default {\r\n    // SIM_API_URL: \"http://127.0.0.1:8000\",\r\n    //FRONT_URL: \"http://localhost:3000\",\r\n    \r\n    // SIM_API_URL: \"https://royalties.jewishmusic.fm\",\r\n\r\n\r\n\r\n    //SIM_API_URL: \"http://167.86.96.120:7000\",\r\n    //FRONT_URL: \"http://royalties.jewishmusic.fm\",    \r\n    SIM_API_URL: \"https://trackroyaltyapi.herokuapp.com\",\r\n};","/**\r\n * The file for registration, login, logout, and forgot password of users and admin\r\n */\r\nimport axios from \"axios\";\r\nimport config from \"../../../config/index\"\r\n\r\nimport {\r\n    USER_ERROR,\r\n    USER_REGISTRATION,\r\n    SHOW_SPINNING,\r\n} from \"../types/types\";\r\n\r\nexport const reset = () => dispatch => {\r\n    dispatch({\r\n        type: USER_REGISTRATION,\r\n        payload: '',\r\n    });\r\n    dispatch({\r\n        type: USER_ERROR,\r\n        payload: '',\r\n    });\r\n};\r\n// export const registerUser = (data) => dispatch => {\r\n//     console.log(data);\r\n//     dispatch({type: SHOW_SPINNING, payload: true});\r\n//     axios\r\n//         .post(config.SIM_API_URL + \"/api/users/register-user\", data)\r\n//         .then(res => {\r\n//             dispatch({type: SHOW_SPINNING, payload: false});\r\n//             dispatch({\r\n//                 type: USER_REGISTRATION,\r\n//                 payload: res.data.msg,\r\n//             });\r\n//         })\r\n//         .catch(err => {\r\n//             dispatch({type: SHOW_SPINNING, payload: false});\r\n//             dispatch({\r\n//                 type: USER_ERROR,\r\n//                 payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n//             });\r\n//         })\r\n// };\r\n\r\nexport const login = (data) => dispatch => {\r\n    console.log(data);\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/users/login\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: USER_REGISTRATION,\r\n                payload: res.data.msg,\r\n            });\r\n            let temp = res.data.results;\r\n            localStorage.setItem(\"id\", temp._id);\r\n            localStorage.setItem(\"name\", temp.name);\r\n            localStorage.setItem(\"email\", temp.email);\r\n            localStorage.setItem(\"role\", temp.role);\r\n            localStorage.setItem(\"token\", res.data.token);\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: USER_ERROR,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\nexport const logOut = () => dispatch => {\r\n    dispatch({\r\n        type: USER_REGISTRATION,\r\n        payload: 'The logout has succeed.',\r\n    });\r\n    localStorage.setItem(\"id\", '');\r\n    localStorage.setItem(\"name\", '');\r\n    localStorage.setItem(\"email\", '');\r\n    localStorage.setItem(\"role\", '');\r\n    localStorage.setItem(\"token\", '');\r\n};\r\n// export const forgotPassword = (data) => dispatch => {\r\n//     console.log(data);\r\n//     dispatch({type: SHOW_SPINNING, payload: true});\r\n//     axios\r\n//         .post(config.SIM_API_URL + \"/api/users/forgot-password\", data)\r\n//         .then(res => {\r\n//             dispatch({type: SHOW_SPINNING, payload: false});\r\n//             dispatch({\r\n//                 type: USER_REGISTRATION,\r\n//                 payload: res.data.results,\r\n//             });\r\n//         })\r\n//         .catch(err => {\r\n//             dispatch({type: SHOW_SPINNING, payload: false});\r\n//             dispatch({\r\n//                 type: USER_ERROR,\r\n//                 payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n//             });\r\n//         })\r\n// };\r\n// export const resetPassword = (data) => dispatch => {\r\n//     console.log(data);\r\n//     dispatch({type: SHOW_SPINNING, payload: true});\r\n//     axios\r\n//         .post(config.SIM_API_URL + \"/api/users/reset-password\", data)\r\n//         .then(res => {\r\n//             dispatch({type: SHOW_SPINNING, payload: false});\r\n//             dispatch({\r\n//                 type: USER_REGISTRATION,\r\n//                 payload: res.data.msg,\r\n//             });\r\n//         })\r\n//         .catch(err => {\r\n//             dispatch({type: SHOW_SPINNING, payload: false});\r\n//             dispatch({\r\n//                 type: USER_ERROR,\r\n//                 payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n//             });\r\n//         })\r\n// };","import React from 'react';\r\nimport {\r\n    reset,\r\n    login,\r\n} from \"../redux/actions/users/registration\";\r\nimport '../assets/css/login.css';\r\nimport { connect } from \"react-redux\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tmr = null;\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.msg_registration && prevProps.msg_registration !== this.props.msg_registration) {\r\n            toast(this.props.msg_registration);\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n                window.location.href = '/';\r\n            }, 1000);\r\n            this.setState({\r\n                email: '',\r\n                password: '',\r\n            })\r\n        }\r\n        if(this.props.msg_user_error && prevProps.msg_user_error !== this.props.msg_user_error) {\r\n            console.log(this.props.msg_user_error);\r\n            let msg = this.props.msg_user_error;\r\n            let msg_array = [];\r\n            if (msg.msg_login_email) {\r\n                msg_array.push(msg.msg_login_email);\r\n            }\r\n            if (msg.msg_login_password) {\r\n                msg_array.push(msg.msg_login_password);\r\n            }\r\n            if(msg_array.length === 0) {\r\n                toast(this.props.msg_user_error);\r\n            } else {\r\n                for (let k = 0; k < msg_array.length; k ++) {\r\n                    toast(msg_array[k]);\r\n                }\r\n            }\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 1500);\r\n        }\r\n    }\r\n    login = () => {\r\n        const {\r\n            login,\r\n        } = this.props;\r\n        const data = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        };\r\n        if(login) {\r\n            login(data);\r\n        }\r\n    };\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value || '',\r\n        })\r\n    };\r\n    onInputAlbumId = (code) => {\r\n        if (code === 13) {\r\n            if (document.activeElement.id === 'email') {\r\n                document.getElementById(\"password\").focus();\r\n            } else if (document.activeElement.id === 'password') {\r\n                this.login();\r\n            }\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"spinning-curtain\" style={{display: this.props.spinning ? \"flex\" : \"none\"}}>\r\n                    <div className=\"lds-dual-ring\"/>\r\n                </div>\r\n                <div className=\"admin-login-bg\">\r\n                    <ToastContainer />\r\n                    <div className=\"login-body\">\r\n                        <div className=\"pb-30 align-center txt-20 txt-bold col-heavyDark\">\r\n                            Sign In\r\n                        </div>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            className=\"mt-20\"\r\n                            value={this.state.email}\r\n                            onChange={(e) => this.onChange(e)}\r\n                            onKeyUp={e => this.onInputAlbumId(e.keyCode)}\r\n                            required\r\n                        />\r\n                        <input\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"****\"\r\n                            className=\"mt-20\"\r\n                            value={this.state.password}\r\n                            onChange={(e) => this.onChange(e)}\r\n                            onKeyUp={e => this.onInputAlbumId(e.keyCode)}\r\n                            required\r\n                        />\r\n                        <div className=\"btn-common txt-16 col-white justify-center mouse-cursor mt-30\" onClick={this.login}>\r\n                            LOGIN\r\n                        </div>\r\n                        {/* <Link to=\"/forgot-password\">\r\n                            <div className=\"txt-14 col-heavyDark align-center pt-30\">Forgot password</div>\r\n                        </Link> */}\r\n                        {/* <Link to=\"/register\">\r\n                            <div className=\"txt-14 col-heavyDark align-center pt-10\">Don't you have an account yet?</div>\r\n                        </Link> */}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        spinning: state.users.spinning,\r\n        msg_registration: state.users.msg_registration,\r\n        msg_user_error: state.users.msg_user_error,\r\n    }\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        reset,\r\n        login,\r\n    }\r\n)(Login);\r\n","import React from \"react\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nconst PrivateRoute = ({component: Component, auth, ...rest}) => {\r\n    const loggedIn = localStorage.getItem('email');\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                (loggedIn !== '' && loggedIn !== undefined) ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/login\"/>\r\n                )\r\n            }\r\n        />\r\n    )\r\n};\r\nPrivateRoute.propTypes = {\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, {Component} from 'react';\r\nimport '../assets/css/dashboard.css';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    reset,\r\n    logOut,\r\n} from \"../redux/actions/users/registration\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nclass LogOut extends Component {\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.msg_registration && prevProps.msg_registration !== this.props.msg_registration) {\r\n            toast(this.props.msg_registration);\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n                window.location.href = '/login';\r\n            }, 2000);\r\n        }\r\n    }\r\n    Cancel = () => {\r\n        const {\r\n            handleClose\r\n        } = this.props;\r\n        handleClose();\r\n    };\r\n    logOut = () => {\r\n        const {\r\n            logOut\r\n        } = this.props;\r\n        logOut();\r\n    };\r\n    render() {\r\n        const showHideClassName = this.props.show ? \"modal-b display-modal-block\" : \"modal-b display-modal-none\";\r\n        return (\r\n            <div className={showHideClassName}>\r\n                <ToastContainer />\r\n                <section className=\"modal-article\">\r\n                    <div className=\"create-modal-header txt-20 justify-left col-white\">Log Out</div>\r\n                    <div className=\"pt-30 pb-30 txt-18 justify-center\">Do you want to log out really?</div>\r\n                    <div className=\"flex-grid2 modal-grid2-gaps modal-p\">\r\n                        <div className=\"btn-common mouse-cursor justify-center col-white\" onClick={this.Cancel}>Cancel</div>\r\n                        <div className=\"btn-common mouse-cursor justify-center col-white\" onClick={this.logOut}>Ok</div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        msg_registration: state.users.msg_registration,\r\n    }\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        reset,\r\n        logOut,\r\n    }\r\n)(LogOut);\r\n\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport \"../assets/css/header.css\";\r\nimport LogOut from \"./logout-modal\";\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tmr = null;\r\n        this.state = {\r\n            menuVisible: false,\r\n            scrolling: false,\r\n            assignVisible: false,\r\n            userVisible: false,\r\n            show: false,\r\n        };\r\n    }\r\n    assignMenu = () => {\r\n        this.setState({assignVisible: !this.state.assignVisible});\r\n        if(!this.state.assignVisible) {\r\n            this.setState({userVisible: false});\r\n        }\r\n        this.setState({\r\n            menuVisible: false,\r\n        })\r\n    };\r\n    toggleMenu = () => {\r\n        this.setState({menuVisible: !this.state.menuVisible});\r\n    };\r\n    userMenu = () => {\r\n        this.setState({userVisible: !this.state.userVisible});\r\n        if(!this.state.userVisible) {\r\n            this.setState({assignVisible: false});\r\n        }\r\n    };\r\n    componentDidMount() {\r\n        if (!localStorage.id) {\r\n            window.location.href = '/login';\r\n        }\r\n        window.addEventListener('scroll', this.handleScroll, true);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n    handleScroll = () => {\r\n        if (window.scrollY > 50) {\r\n            this.setState({scrolling: true});\r\n        }\r\n        else {\r\n            this.setState({scrolling: false});\r\n        }\r\n    };\r\n    onLink = () => {\r\n        this.setState({\r\n            menuVisible: false,\r\n            assignVisible: false,\r\n            userVisible: false,\r\n        })\r\n    };\r\n    showModal = () => {\r\n        this.setState({\r\n            show: true,\r\n        })\r\n    };\r\n    hideModal = () => {\r\n        this.setState({\r\n            show: false,\r\n        })\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={`header-body ${this.state.scrolling ? 'white' : ''}`}>\r\n                <div className={`header-height ${this.state.scrolling ? 'white' : ''}`}>\r\n                    <div className=\"logo-mw flex-space\">\r\n                        <div className={\"header-logo\"}>\r\n                            <Link\r\n                                className=\"btn-underLine\"\r\n                                to={localStorage.role === \"admin\"? \"/user-list\": \"/user/reports\"}\r\n                            >\r\n                                <div className=\"col-selected-bg txt-bold\">Hi {localStorage.name}</div>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"justify-center\">\r\n                            <div className=\"flex-center\">\r\n                                {\r\n                                    localStorage.role === \"admin\" &&\r\n                                        <>\r\n                                            <div className=\"btn-navbar mouse-cursor dropdown\">\r\n                                                <span>User</span>\r\n                                                {\r\n                                                    this.state.scrolling?\r\n                                                        <img className=\"drop-icon\" src={require(\"../assets/images/drop-down-black.svg\")} alt=\"drop down\" />\r\n                                                        :\r\n                                                        <img className=\"drop-icon\" src={require(\"../assets/images/drop-down.svg\")} alt=\"drop down\" />\r\n                                                }\r\n                                                <div className=\"dropdown-content\">\r\n                                                    <Link className=\"btn-underLine\" to=\"/add-user\">\r\n                                                        <div className=\"menu-txt mouse-cursor\">Add User</div>\r\n                                                    </Link>\r\n                                                    <Link className=\"btn-underLine\" to=\"/user-list\">\r\n                                                        <div className=\"menu-txt mouse-cursor\">User List</div>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Link className=\"btn-underLine\" to=\"/add-album\">\r\n                                                <div className=\"btn-navbar mouse-cursor\">New Album</div>\r\n                                            </Link>\r\n                                            <Link className=\"btn-underLine\" to=\"/assign-album\">\r\n                                                <div className=\"btn-navbar mouse-cursor\">Assign to User</div>\r\n                                            </Link>\r\n                                        </>\r\n                                }\r\n\r\n                                {\r\n                                    localStorage.role === 'publisher' &&\r\n                                        <>\r\n                                            <Link className=\"btn-underLine\" to=\"/user-agreement\">\r\n                                                <div className=\"btn-navbar mouse-cursor\">Payment</div>\r\n                                            </Link>\r\n                                            <Link className=\"btn-underLine\" to=\"/user-reports\">\r\n                                                <div className=\"btn-navbar mouse-cursor\">My Reports</div>\r\n                                            </Link>\r\n                                            <Link className=\"btn-underLine\" to=\"/user-settings\">\r\n                                                <div className=\"btn-navbar mouse-cursor\">Profile Settings</div>\r\n                                            </Link>\r\n                                        </>\r\n                                }\r\n                                <div className=\"btn-underLine btn-navbar mouse-cursor btn-sign\" onClick={this.showModal}>Log out</div>\r\n                            </div>\r\n                            <div id=\"menu\" className=\"justify-center\" onClick={this.toggleMenu}>\r\n                                <img className=\"mobile-menu mouse-cursor\"\r\n                                     src={require('../assets/images/mobile-menu.svg')} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.menuVisible && (\r\n                        localStorage.role === \"admin\"?\r\n                            <div\r\n                                className=\"menu-container trans-menu\"\r\n                                style={{overflowY: 'auto;', maxHeight: '70vh'}}\r\n                            >\r\n                                <div className=\"btn-underLine\">\r\n                                    <div\r\n                                        className=\"navbar-menu justify-center txt-24 mouse-cursor btn-navbar-bb\"\r\n                                        onClick={this.logOut}\r\n                                    >\r\n                                        Log out\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className={this.state.userVisible ? \"navbar-menu justify-center txt-24 mouse-cursor btn-navbar-bb menu-selectedBg\" : \"navbar-menu justify-center txt-24 mouse-cursor btn-navbar-bb\"}\r\n                                    onClick={this.userMenu}\r\n                                >\r\n                                    User\r\n                                    {\r\n                                        this.state.userVisible ?\r\n                                            <div className=\"dropdown-icon justify-center\">\r\n                                                <img className=\"down-up-size\" src={require(\"../assets/images/up.svg\")} alt='' />\r\n                                            </div>\r\n                                            :\r\n                                            <div className=\"dropdown-icon\">\r\n                                                <img className=\"down-up-size\" src={require(\"../assets/images/down.svg\")} alt='' />\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                                {\r\n                                    this.state.userVisible && (\r\n                                        <div>\r\n                                            <Link\r\n                                                to='/add-user'\r\n                                                className=\"btn-underLine_black secondMenu justify-center menu-txt btn-navbar-bb mouse-cursor\"\r\n                                                onClick={this.onLink}\r\n                                            >\r\n                                                <div>Add User</div>\r\n                                            </Link>\r\n                                            <Link\r\n                                                to='/user-list'\r\n                                                className=\"btn-underLine_black secondMenu justify-center menu-txt btn-navbar-bb mouse-cursor\"\r\n                                                onClick={this.onLink}\r\n                                            >\r\n                                                <div>User List</div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                <Link\r\n                                    className=\"btn-underLine\"\r\n                                    to=\"/add-album\"\r\n                                >\r\n                                    <div\r\n                                        className=\"navbar-menu justify-center txt-24 mouse-cursor btn-navbar-bb\"\r\n                                        onClick={this.onLink}\r\n                                    >\r\n                                        New Album\r\n                                    </div>\r\n                                </Link>\r\n                                <Link\r\n                                    className=\"btn-underLine\"\r\n                                    to=\"/assign-album\"\r\n                                >\r\n                                    <div\r\n                                        className={this.state.assignVisible ? \"navbar-menu justify-center txt-24 mouse-cursor btn-navbar-bb menu-selectedBg\" : \"navbar-menu justify-center txt-24 mouse-cursor btn-navbar-bb\"}\r\n                                        onClick={this.assignMenu}\r\n                                    >\r\n                                        Assign to User\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                            :\r\n                            <div\r\n                                className=\"menu-container trans-menu\"\r\n                                style={{overflowY: 'auto;', maxHeight: '70vh'}}\r\n                            >\r\n                                <div className=\"btn-underLine\">\r\n                                    <div\r\n                                        className=\"navbar-menu justify-center txt-24 mouse-cursor btn-navbar-bb\"\r\n                                        onClick={this.logOut}\r\n                                    >\r\n                                        Log out\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Link\r\n                                    className=\"btn-underLine\"\r\n                                    to=\"/user-agreement\"\r\n                                >\r\n                                    <div\r\n                                        className=\"navbar-menu justify-center txt-24 mouse-cursor btn-navbar-bb\"\r\n                                        onClick={this.onLink}\r\n                                    >\r\n                                        Payment\r\n                                    </div>\r\n                                </Link>\r\n                                <Link\r\n                                    className=\"btn-underLine\"\r\n                                    to=\"/user-reports\"\r\n                                >\r\n                                    <div\r\n                                        className=\"navbar-menu justify-center txt-24 mouse-cursor btn-navbar-bb\"\r\n                                        onClick={this.assignMenu}\r\n                                    >\r\n                                        My Reports\r\n                                    </div>\r\n                                </Link>\r\n                                <Link\r\n                                    className=\"btn-underLine\"\r\n                                    to=\"/user-settings\"\r\n                                >\r\n                                    <div\r\n                                        className=\"navbar-menu justify-center txt-24 mouse-cursor btn-navbar-bb\"\r\n                                        onClick={this.assignMenu}\r\n                                    >\r\n                                        Profile Settings\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                    )\r\n                }\r\n            {/*  Modal  */}\r\n            <LogOut\r\n                show={this.state.show}\r\n                handleClose={this.hideModal}\r\n            />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n    }\r\n)(Header);","/**\r\n * The file for creating, editing, deleting, and viewing for the users\r\n */\r\nimport axios from \"axios\";\r\nimport config from \"../../../config/index\"\r\nimport {\r\n    SHOW_SPINNING,\r\n    CREATE_PUBLISHER,\r\n    ERROR_CREATE_PUBLISHER,\r\n    GET_USERS,\r\n    GET_USER_ERROR,\r\n    DELETE_USER,\r\n    GET_USER,\r\n    ERROR_USER,\r\n    GET_ALL_USERS,\r\n    GET_SEARCH_USERS,\r\n} from \"../types/types\";\r\n\r\nexport const reset = () => dispatch => {\r\n    dispatch({\r\n        type: CREATE_PUBLISHER,\r\n        payload: '',\r\n    });\r\n    dispatch({\r\n        type: ERROR_CREATE_PUBLISHER,\r\n        payload: '',\r\n    });\r\n    dispatch({\r\n        type: GET_USER_ERROR,\r\n        payload: '',\r\n    });\r\n    dispatch({\r\n        type: DELETE_USER,\r\n        payload: '',\r\n    });\r\n    dispatch({\r\n        type: ERROR_USER,\r\n        payload: '',\r\n    });\r\n};\r\n\r\nexport const createPublisher = (data) => dispatch => {\r\n    console.log(data);\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/users/create-publisher\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: CREATE_PUBLISHER,\r\n                payload: res.data.msg,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ERROR_CREATE_PUBLISHER,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\nexport const getUserList = (data) => dispatch => {\r\n    console.log(data);\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/users/get-users\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: GET_USERS,\r\n                payload: res.data.results,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: GET_USER_ERROR,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\nexport const deleteUser = (data) => dispatch => {\r\n    console.log(\"delete Data = \", data);\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/users/delete-user\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: DELETE_USER,\r\n                payload: res.data.msg,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: DELETE_USER,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\nexport const getPublisherById = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/users/get-user\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: GET_USER,\r\n                payload: res.data.results,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ERROR_USER,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\nexport const getAllUsers = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/users/get-all-users\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: GET_ALL_USERS,\r\n                payload: res.data.results,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: GET_USER_ERROR,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\n/**\r\n * Update the publisher profile oneself\r\n */\r\nexport const updatePublisher = (data) => dispatch => {\r\n    console.log(data);\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/users/update-publisher\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: CREATE_PUBLISHER,\r\n                payload: res.data.msg,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ERROR_CREATE_PUBLISHER,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\n\r\n/**\r\n * Filtering the users\r\n */\r\nexport const searchFilterUsers = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post( config.SIM_API_URL + \"/api/users/search\", data )\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({type: GET_SEARCH_USERS, payload: res.data.list});\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({type: ERROR_USER, payload: err && err.response && err.response.data && err.response.data.msg});\r\n        })\r\n};","import React, {Component} from 'react';\r\nclass CountriesList extends Component{\r\n    render(){\r\n        return (\r\n            <>\r\n                <option value=\"AF\">Afghanistan</option>\r\n                <option value=\"AX\">Åland Islands</option>\r\n                <option value=\"AL\">Albania</option>\r\n                <option value=\"DZ\">Algeria</option>\r\n                <option value=\"AS\">American Samoa</option>\r\n                <option value=\"AD\">Andorra</option>\r\n                <option value=\"AO\">Angola</option>\r\n                <option value=\"AI\">Anguilla</option>\r\n                <option value=\"AQ\">Antarctica</option>\r\n                <option value=\"AG\">Antigua and Barbuda</option>\r\n                <option value=\"AR\">Argentina</option>\r\n                <option value=\"AM\">Armenia</option>\r\n                <option value=\"AW\">Aruba</option>\r\n                <option value=\"AU\">Australia</option>\r\n                <option value=\"AT\">Austria</option>\r\n                <option value=\"AZ\">Azerbaijan</option>\r\n                <option value=\"BS\">Bahamas</option>\r\n                <option value=\"BH\">Bahrain</option>\r\n                <option value=\"BD\">Bangladesh</option>\r\n                <option value=\"BB\">Barbados</option>\r\n                <option value=\"BY\">Belarus</option>\r\n                <option value=\"BE\">Belgium</option>\r\n                <option value=\"BZ\">Belize</option>\r\n                <option value=\"BJ\">Benin</option>\r\n                <option value=\"BM\">Bermuda</option>\r\n                <option value=\"BT\">Bhutan</option>\r\n                <option value=\"BO\">Bolivia, Plurinational State of</option>\r\n                <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\r\n                <option value=\"BA\">Bosnia and Herzegovina</option>\r\n                <option value=\"BW\">Botswana</option>\r\n                <option value=\"BV\">Bouvet Island</option>\r\n                <option value=\"BR\">Brazil</option>\r\n                <option value=\"IO\">British Indian Ocean Territory</option>\r\n                <option value=\"BN\">Brunei Darussalam</option>\r\n                <option value=\"BG\">Bulgaria</option>\r\n                <option value=\"BF\">Burkina Faso</option>\r\n                <option value=\"BI\">Burundi</option>\r\n                <option value=\"KH\">Cambodia</option>\r\n                <option value=\"CM\">Cameroon</option>\r\n                <option value=\"CA\">Canada</option>\r\n                <option value=\"CV\">Cape Verde</option>\r\n                <option value=\"KY\">Cayman Islands</option>\r\n                <option value=\"CF\">Central African Republic</option>\r\n                <option value=\"TD\">Chad</option>\r\n                <option value=\"CL\">Chile</option>\r\n                <option value=\"CN\">China</option>\r\n                <option value=\"CX\">Christmas Island</option>\r\n                <option value=\"CC\">Cocos (Keeling) Islands</option>\r\n                <option value=\"CO\">Colombia</option>\r\n                <option value=\"KM\">Comoros</option>\r\n                <option value=\"CG\">Congo</option>\r\n                <option value=\"CD\">Congo, the Democratic Republic of the</option>\r\n                <option value=\"CK\">Cook Islands</option>\r\n                <option value=\"CR\">Costa Rica</option>\r\n                <option value=\"CI\">Côte d'Ivoire</option>\r\n                <option value=\"HR\">Croatia</option>\r\n                <option value=\"CU\">Cuba</option>\r\n                <option value=\"CW\">Curaçao</option>\r\n                <option value=\"CY\">Cyprus</option>\r\n                <option value=\"CZ\">Czech Republic</option>\r\n                <option value=\"DK\">Denmark</option>\r\n                <option value=\"DJ\">Djibouti</option>\r\n                <option value=\"DM\">Dominica</option>\r\n                <option value=\"DO\">Dominican Republic</option>\r\n                <option value=\"EC\">Ecuador</option>\r\n                <option value=\"EG\">Egypt</option>\r\n                <option value=\"SV\">El Salvador</option>\r\n                <option value=\"GQ\">Equatorial Guinea</option>\r\n                <option value=\"ER\">Eritrea</option>\r\n                <option value=\"EE\">Estonia</option>\r\n                <option value=\"ET\">Ethiopia</option>\r\n                <option value=\"FK\">Falkland Islands (Malvinas)</option>\r\n                <option value=\"FO\">Faroe Islands</option>\r\n                <option value=\"FJ\">Fiji</option>\r\n                <option value=\"FI\">Finland</option>\r\n                <option value=\"FR\">France</option>\r\n                <option value=\"GF\">French Guiana</option>\r\n                <option value=\"PF\">French Polynesia</option>\r\n                <option value=\"TF\">French Southern Territories</option>\r\n                <option value=\"GA\">Gabon</option>\r\n                <option value=\"GM\">Gambia</option>\r\n                <option value=\"GE\">Georgia</option>\r\n                <option value=\"DE\">Germany</option>\r\n                <option value=\"GH\">Ghana</option>\r\n                <option value=\"GI\">Gibraltar</option>\r\n                <option value=\"GR\">Greece</option>\r\n                <option value=\"GL\">Greenland</option>\r\n                <option value=\"GD\">Grenada</option>\r\n                <option value=\"GP\">Guadeloupe</option>\r\n                <option value=\"GU\">Guam</option>\r\n                <option value=\"GT\">Guatemala</option>\r\n                <option value=\"GG\">Guernsey</option>\r\n                <option value=\"GN\">Guinea</option>\r\n                <option value=\"GW\">Guinea-Bissau</option>\r\n                <option value=\"GY\">Guyana</option>\r\n                <option value=\"HT\">Haiti</option>\r\n                <option value=\"HM\">Heard Island and McDonald Islands</option>\r\n                <option value=\"VA\">Holy See (Vatican City State)</option>\r\n                <option value=\"HN\">Honduras</option>\r\n                <option value=\"HK\">Hong Kong</option>\r\n                <option value=\"HU\">Hungary</option>\r\n                <option value=\"IS\">Iceland</option>\r\n                <option value=\"IN\">India</option>\r\n                <option value=\"ID\">Indonesia</option>\r\n                <option value=\"IR\">Iran, Islamic Republic of</option>\r\n                <option value=\"IQ\">Iraq</option>\r\n                <option value=\"IE\">Ireland</option>\r\n                <option value=\"IM\">Isle of Man</option>\r\n                <option value=\"IL\">Israel</option>\r\n                <option value=\"IT\">Italy</option>\r\n                <option value=\"JM\">Jamaica</option>\r\n                <option value=\"JP\">Japan</option>\r\n                <option value=\"JE\">Jersey</option>\r\n                <option value=\"JO\">Jordan</option>\r\n                <option value=\"KZ\">Kazakhstan</option>\r\n                <option value=\"KE\">Kenya</option>\r\n                <option value=\"KI\">Kiribati</option>\r\n                <option value=\"KP\">Korea, Democratic People's Republic of</option>\r\n                <option value=\"KR\">Korea, Republic of</option>\r\n                <option value=\"KW\">Kuwait</option>\r\n                <option value=\"KG\">Kyrgyzstan</option>\r\n                <option value=\"LA\">Lao People's Democratic Republic</option>\r\n                <option value=\"LV\">Latvia</option>\r\n                <option value=\"LB\">Lebanon</option>\r\n                <option value=\"LS\">Lesotho</option>\r\n                <option value=\"LR\">Liberia</option>\r\n                <option value=\"LY\">Libya</option>\r\n                <option value=\"LI\">Liechtenstein</option>\r\n                <option value=\"LT\">Lithuania</option>\r\n                <option value=\"LU\">Luxembourg</option>\r\n                <option value=\"MO\">Macao</option>\r\n                <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\r\n                <option value=\"MG\">Madagascar</option>\r\n                <option value=\"MW\">Malawi</option>\r\n                <option value=\"MY\">Malaysia</option>\r\n                <option value=\"MV\">Maldives</option>\r\n                <option value=\"ML\">Mali</option>\r\n                <option value=\"MT\">Malta</option>\r\n                <option value=\"MH\">Marshall Islands</option>\r\n                <option value=\"MQ\">Martinique</option>\r\n                <option value=\"MR\">Mauritania</option>\r\n                <option value=\"MU\">Mauritius</option>\r\n                <option value=\"YT\">Mayotte</option>\r\n                <option value=\"MX\">Mexico</option>\r\n                <option value=\"FM\">Micronesia, Federated States of</option>\r\n                <option value=\"MD\">Moldova, Republic of</option>\r\n                <option value=\"MC\">Monaco</option>\r\n                <option value=\"MN\">Mongolia</option>\r\n                <option value=\"ME\">Montenegro</option>\r\n                <option value=\"MS\">Montserrat</option>\r\n                <option value=\"MA\">Morocco</option>\r\n                <option value=\"MZ\">Mozambique</option>\r\n                <option value=\"MM\">Myanmar</option>\r\n                <option value=\"NA\">Namibia</option>\r\n                <option value=\"NR\">Nauru</option>\r\n                <option value=\"NP\">Nepal</option>\r\n                <option value=\"NL\">Netherlands</option>\r\n                <option value=\"NC\">New Caledonia</option>\r\n                <option value=\"NZ\">New Zealand</option>\r\n                <option value=\"NI\">Nicaragua</option>\r\n                <option value=\"NE\">Niger</option>\r\n                <option value=\"NG\">Nigeria</option>\r\n                <option value=\"NU\">Niue</option>\r\n                <option value=\"NF\">Norfolk Island</option>\r\n                <option value=\"MP\">Northern Mariana Islands</option>\r\n                <option value=\"NO\">Norway</option>\r\n                <option value=\"OM\">Oman</option>\r\n                <option value=\"PK\">Pakistan</option>\r\n                <option value=\"PW\">Palau</option>\r\n                <option value=\"PS\">Palestinian Territory, Occupied</option>\r\n                <option value=\"PA\">Panama</option>\r\n                <option value=\"PG\">Papua New Guinea</option>\r\n                <option value=\"PY\">Paraguay</option>\r\n                <option value=\"PE\">Peru</option>\r\n                <option value=\"PH\">Philippines</option>\r\n                <option value=\"PN\">Pitcairn</option>\r\n                <option value=\"PL\">Poland</option>\r\n                <option value=\"PT\">Portugal</option>\r\n                <option value=\"PR\">Puerto Rico</option>\r\n                <option value=\"QA\">Qatar</option>\r\n                <option value=\"RE\">Réunion</option>\r\n                <option value=\"RO\">Romania</option>\r\n                <option value=\"RU\">Russian Federation</option>\r\n                <option value=\"RW\">Rwanda</option>\r\n                <option value=\"BL\">Saint Barthélemy</option>\r\n                <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\r\n                <option value=\"KN\">Saint Kitts and Nevis</option>\r\n                <option value=\"LC\">Saint Lucia</option>\r\n                <option value=\"MF\">Saint Martin (French part)</option>\r\n                <option value=\"PM\">Saint Pierre and Miquelon</option>\r\n                <option value=\"VC\">Saint Vincent and the Grenadines</option>\r\n                <option value=\"WS\">Samoa</option>\r\n                <option value=\"SM\">San Marino</option>\r\n                <option value=\"ST\">Sao Tome and Principe</option>\r\n                <option value=\"SA\">Saudi Arabia</option>\r\n                <option value=\"SN\">Senegal</option>\r\n                <option value=\"RS\">Serbia</option>\r\n                <option value=\"SC\">Seychelles</option>\r\n                <option value=\"SL\">Sierra Leone</option>\r\n                <option value=\"SG\">Singapore</option>\r\n                <option value=\"SX\">Sint Maarten (Dutch part)</option>\r\n                <option value=\"SK\">Slovakia</option>\r\n                <option value=\"SI\">Slovenia</option>\r\n                <option value=\"SB\">Solomon Islands</option>\r\n                <option value=\"SO\">Somalia</option>\r\n                <option value=\"ZA\">South Africa</option>\r\n                <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\r\n                <option value=\"SS\">South Sudan</option>\r\n                <option value=\"ES\">Spain</option>\r\n                <option value=\"LK\">Sri Lanka</option>\r\n                <option value=\"SD\">Sudan</option>\r\n                <option value=\"SR\">Suriname</option>\r\n                <option value=\"SJ\">Svalbard and Jan Mayen</option>\r\n                <option value=\"SZ\">Swaziland</option>\r\n                <option value=\"SE\">Sweden</option>\r\n                <option value=\"CH\">Switzerland</option>\r\n                <option value=\"SY\">Syrian Arab Republic</option>\r\n                <option value=\"TW\">Taiwan, Province of China</option>\r\n                <option value=\"TJ\">Tajikistan</option>\r\n                <option value=\"TZ\">Tanzania, United Republic of</option>\r\n                <option value=\"TH\">Thailand</option>\r\n                <option value=\"TL\">Timor-Leste</option>\r\n                <option value=\"TG\">Togo</option>\r\n                <option value=\"TK\">Tokelau</option>\r\n                <option value=\"TO\">Tonga</option>\r\n                <option value=\"TT\">Trinidad and Tobago</option>\r\n                <option value=\"TN\">Tunisia</option>\r\n                <option value=\"TR\">Turkey</option>\r\n                <option value=\"TM\">Turkmenistan</option>\r\n                <option value=\"TC\">Turks and Caicos Islands</option>\r\n                <option value=\"TV\">Tuvalu</option>\r\n                <option value=\"UG\">Uganda</option>\r\n                <option value=\"UA\">Ukraine</option>\r\n                <option value=\"AE\">United Arab Emirates</option>\r\n                <option value=\"GB\">United Kingdom</option>\r\n                <option value=\"US\">United States</option>\r\n                <option value=\"UM\">United States Minor Outlying Islands</option>\r\n                <option value=\"UY\">Uruguay</option>\r\n                <option value=\"UZ\">Uzbekistan</option>\r\n                <option value=\"VU\">Vanuatu</option>\r\n                <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\r\n                <option value=\"VN\">Viet Nam</option>\r\n                <option value=\"VG\">Virgin Islands, British</option>\r\n                <option value=\"VI\">Virgin Islands, U.S.</option>\r\n                <option value=\"WF\">Wallis and Futuna</option>\r\n                <option value=\"EH\">Western Sahara</option>\r\n                <option value=\"YE\">Yemen</option>\r\n                <option value=\"ZM\">Zambia</option>\r\n                <option value=\"ZW\">Zimbabwe</option>\r\n            </>\r\n        );\r\n    };\r\n}\r\nexport default CountriesList;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport '../assets/css/dashboard.css';\r\nimport {\r\n    reset,\r\n    createPublisher,\r\n    getPublisherById,\r\n} from \"../redux/actions/users/publisher\";\r\n\r\nimport CountriesList from \"../components/country-list\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst config = require(\"../config/config\");\r\n\r\nclass AddUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tmr = null;\r\n        this.state = {\r\n            userId: '',\r\n            user_edit: '',\r\n            name: '',\r\n            phone: '',\r\n            email: '',\r\n            password: '',\r\n            confirm_password: '',\r\n            country: 'US',\r\n            bank_info: '',\r\n            currency_type: config.SYMBOL[0],\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.match.params && this.props.match.params.id) {\r\n            const {\r\n                getPublisherById,\r\n            } = this.props;\r\n            if(getPublisherById) {\r\n                const data = {\r\n                    id: this.props.match.params.id,\r\n                };\r\n                getPublisherById(data);\r\n            }\r\n       }\r\n        this.onInitial();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.state.userId !== this.props.match.params.id) {\r\n            this.setState({ userId: this.props.match.params.id });\r\n            this.onInitial();\r\n        }\r\n        if(this.props.msg_create_publisher && prevProps.msg_create_publisher !== this.props.msg_create_publisher) {\r\n            toast(this.props.msg_create_publisher);\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 2000);\r\n            this.onInitial();\r\n        }\r\n        if(this.props.msg_publisher_error && prevProps.msg_publisher_error !== this.props.msg_publisher_error) {\r\n            console.log(this.props.msg_publisher_error);\r\n            let msg = this.props.msg_publisher_error;\r\n            let msg_array = [];\r\n            if (msg.name) {\r\n                msg_array.push(msg.name);\r\n            }\r\n            if (msg.phone) {\r\n                msg_array.push(msg.phone);\r\n            }\r\n            if (msg.email) {\r\n                msg_array.push(msg.email);\r\n            }\r\n            if (msg.password) {\r\n                msg_array.push(msg.password);\r\n            }\r\n            if (msg.confirm_password) {\r\n                msg_array.push(msg.confirm_password);\r\n            }\r\n            if (msg.country) {\r\n                msg_array.push(msg.country);\r\n            }\r\n            if (msg.bank_info) {\r\n                msg_array.push(msg.bank_info);\r\n            }\r\n            if(msg_array.length === 0) {\r\n                toast(this.props.msg_publisher_error);\r\n            } else {\r\n                for (let k = 0; k < msg_array.length; k ++) {\r\n                    toast(msg_array[k]);\r\n                }\r\n            }\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 6000);\r\n        }\r\n        if(this.props.msg_user && this.props.msg_user !== prevProps.msg_user) {\r\n            toast(this.props.msg_user);\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 2000);\r\n            this.onInitial();\r\n        }\r\n        if (this.props.get_user && this.props.get_user !== prevProps.get_user) {\r\n            let user = this.props.get_user;\r\n            this.setState({\r\n                user_edit: user,\r\n                name: user.name,\r\n                phone: user.phone,\r\n                email: user.email,\r\n                password: user.origin_password,\r\n                confirm_password: user.origin_password,\r\n                country: user.country,\r\n                bank_info: user.bank_info,\r\n                currency_type: user.currency ? user.currency : config.SYMBOL[0],\r\n            })\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value || '',\r\n        })\r\n    };\r\n    onPhoneChange = (e) => {\r\n        this.setState({[e.target.id]: parseFloat(e.target.value || 0)});\r\n    };\r\n    onInitial = () => {\r\n        this.setState({\r\n            name: this.state.userId === undefined ? this.state.user_edit.name: '',\r\n            phone: this.state.userId === undefined ? this.state.user_edit.phone: '',\r\n            email: this.state.userId === undefined ? this.state.user_edit.email: '',\r\n            password: this.state.userId === undefined ? this.state.user_edit.origin_password: '',\r\n            confirm_password: this.state.userId === undefined ? this.state.user_edit.origin_password: '',\r\n            country: this.state.userId === undefined ? this.state.user_edit.country: 'US',\r\n            bank_info: this.state.userId === undefined ? this.state.user_edit.bank_info: '',\r\n            currency_type: this.state.userId === undefined ? this.state.user_edit.currency_type: config.SYMBOL[0],\r\n        })\r\n    };\r\n    onClickInitial = () => {\r\n        this.setState({\r\n            name: this.state.userId !== undefined ? this.state.user_edit.name: '',\r\n            phone: this.state.userId !== undefined ? this.state.user_edit.phone: '',\r\n            email: this.state.userId !== undefined ? this.state.user_edit.email: '',\r\n            password: this.state.userId !== undefined ? this.state.user_edit.origin_password: '',\r\n            confirm_password: this.state.userId !== undefined ? this.state.user_edit.origin_password: '',\r\n            country: this.state.userId !== undefined ? this.state.user_edit.country: 'US',\r\n            bank_info: this.state.userId !== undefined ? this.state.user_edit.bank_info: '',\r\n            currency_type: this.state.userId !== undefined ? this.state.user_edit.currency_type: config.SYMBOL[0],\r\n        })\r\n    };\r\n    onSelectCountry = (e) => {\r\n        this.setState({\r\n            country: e.target.value,\r\n        });\r\n    };\r\n    onSave = () => {\r\n        const {\r\n            createPublisher\r\n        } = this.props;\r\n\r\n        if(createPublisher) {\r\n            const data = {\r\n                role_id: localStorage.id,\r\n                name: this.state.name,\r\n                phone: this.state.phone,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                confirm_password: this.state.confirm_password,\r\n                country: this.state.country,\r\n                bank_info: this.state.bank_info,\r\n                currency: this.state.currency_type,\r\n                flag: \"create\",\r\n            };\r\n            console.log(data);\r\n            createPublisher(data);\r\n        }\r\n    };\r\n    onUpdate = () => {\r\n        const {\r\n            createPublisher\r\n        } = this.props;\r\n\r\n        if(createPublisher) {\r\n            const data = {\r\n                role_id: localStorage.id,\r\n                id: this.state.userId,\r\n                name: this.state.name,\r\n                phone: this.state.phone,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                confirm_password: this.state.confirm_password,\r\n                country: this.state.country,\r\n                bank_info: this.state.bank_info,\r\n                currency: this.state.currency_type,\r\n                flag: \"update\",\r\n            };\r\n            createPublisher(data);\r\n        }\r\n    };\r\n    onInput = (code) => {\r\n        if (code === 13) {\r\n            if (document.activeElement.id === 'name' && this.state.name !== '') {\r\n                document.getElementById(\"phone\").focus();\r\n            } else if (document.activeElement.id === 'phone' && this.state.phone !== '') {\r\n                document.getElementById(\"email\").focus();\r\n            } else if (document.activeElement.id === 'email' && this.state.email !== '') {\r\n                document.getElementById(\"password\").focus();\r\n            } else if (document.activeElement.id === 'password' && this.state.password !== '') {\r\n                document.getElementById(\"confirm_password\").focus();\r\n            } else if (document.activeElement.id === 'confirm_password' && this.state.confirm_password !== '') {\r\n                document.getElementById(\"bank_info\").focus();\r\n            } else if (document.activeElement.id === 'bank_info' && this.state.bank_info !== '') {\r\n                if (this.state.userId) {\r\n                    this.onUpdate();\r\n                } else {\r\n                    this.onSave();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <ToastContainer />\r\n                <div className=\"spinning-curtain\" style={{display: this.props.spinning ? \"flex\" : \"none\"}}>\r\n                    <div className=\"lds-dual-ring\"/>\r\n                </div>\r\n                <div className=\"col-darkBlue txt-30 txt-bold pb-20 pl-40\">\r\n                    Add User\r\n                </div>\r\n                <div className=\"form-bg\">\r\n                    <input\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        className=\"mt-20\"\r\n                        placeholder=\"User Name\"\r\n                        value={this.state.name}\r\n                        onChange={(e) => this.onChange(e)}\r\n                        onKeyUp={e => this.onInput(e.keyCode)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        id=\"phone\"\r\n                        type=\"tel\"\r\n                        className=\"mt-20\"\r\n                        placeholder=\"Phone Number\"\r\n                        value={this.state.phone}\r\n                        onChange={(e) => this.onPhoneChange(e)}\r\n                        onKeyUp={e => this.onInput(e.keyCode)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        className=\"mt-20\"\r\n                        placeholder=\"Email\"\r\n                        value={this.state.email}\r\n                        onChange={(e) => this.onChange(e)}\r\n                        onKeyUp={e => this.onInput(e.keyCode)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        className=\"mt-20\"\r\n                        placeholder=\"Password\"\r\n                        value={this.state.password}\r\n                        onChange={(e) => this.onChange(e)}\r\n                        onKeyUp={e => this.onInput(e.keyCode)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        id=\"confirm_password\"\r\n                        type=\"password\"\r\n                        className=\"mt-20\"\r\n                        placeholder=\"Confirm Password\"\r\n                        value={this.state.confirm_password}\r\n                        onChange={(e) => this.onChange(e)}\r\n                        onKeyUp={e => this.onInput(e.keyCode)}\r\n                        required\r\n                    />\r\n                    <select\r\n                        className=\"mt-20\"\r\n                        value={this.state.country}\r\n                        onChange={(e) => this.onSelectCountry(e)}\r\n                        onKeyUp={e => this.onInput(e.keyCode)}\r\n                    >\r\n                        <CountriesList/>\r\n                    </select>\r\n                    <input\r\n                        id=\"bank_info\"\r\n                        type=\"text\"\r\n                        className=\"mt-20\"\r\n                        placeholder=\"Bank Information\"\r\n                        value={this.state.bank_info}\r\n                        onChange={(e) => this.onChange(e)}\r\n                        onKeyUp={e => this.onInput(e.keyCode)}\r\n                        required\r\n                    />\r\n                    <div className=\"mt-20\">\r\n                        <select\r\n                            className=\"publisher mouse-cursor\"\r\n                            value={this.state.currency_type}\r\n                            onChange={(e) => this.setState({ currency_type: e.target.value})}\r\n                        >\r\n                            <option key=\"0\" value=\"0\" disabled>Currency Type</option>\r\n                            {\r\n                                config.SYMBOL && config.SYMBOL.map((item, key) => {\r\n                                    return (\r\n                                        <option key={key + 1} value={ item }>\r\n                                            { config.CURRENCY[key] }\r\n                                        </option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"flex-space fields\">\r\n                        <div className=\"flex-space fields mt-20\">\r\n                            <div className=\"btn-common cancel col-white mouse-cursor action\" onClick={this.props.history.goBack}>BACK</div>\r\n                            <div className=\"btn-common initial col-white mouse-cursor action\" onClick={this.onClickInitial}>INITIALIZE</div>\r\n                        </div>\r\n                        {\r\n                            this.state.userId?\r\n                                <div className=\"btn-common save col-white mouse-cursor\" onClick={this.onUpdate}>\r\n                                    UPDATE\r\n                                </div>\r\n                                :\r\n                                <div className=\"btn-common save col-white mouse-cursor\" onClick={this.onSave}>\r\n                                    SAVE\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        spinning: state.users.spinning,\r\n        msg_create_publisher: state.users.msg_create_publisher,\r\n        msg_publisher_error: state.users.msg_publisher_error,\r\n        get_user: state.users.get_user,\r\n        msg_user: state.users.msg_user,\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        reset,\r\n        createPublisher,\r\n        getPublisherById,\r\n    }\r\n)(AddUser);","/**\r\n * The file for track management\r\n */\r\nimport axios from \"axios\";\r\nimport config from \"../../../config/index\";\r\nimport {\r\n    SHOW_SPINNING,\r\n    GET_TRACK_LIST,\r\n    ERROR_TRACK_LIST,\r\n    TRACK_UPDATE_PAYMENT,\r\n    UPDATE_PAID,\r\n} from \"../types/types\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: config.SIM_API_URL,\r\n    timeout: 3000,\r\n    headers: {'Authorization': localStorage.getItem('token')}\r\n});\r\n\r\n\r\n\r\nexport const reset = () => dispatch => {\r\n    dispatch({\r\n        type: ERROR_TRACK_LIST,\r\n        payload: '',\r\n    });\r\n    dispatch({\r\n        type: TRACK_UPDATE_PAYMENT,\r\n        payload: '',\r\n    });\r\n};\r\n\r\nexport const resetManagement = () => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_PAID,\r\n        payload: '',\r\n    })\r\n};\r\n/**\r\n * Getting the track list by publisher_id and album_id\r\n */\r\nexport const getTrackListById = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/managements/get-tracks\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: GET_TRACK_LIST,\r\n                payload: res.data.results,\r\n            });\r\n        }).catch(err => {\r\n        dispatch({type: SHOW_SPINNING, payload: false});\r\n        dispatch({\r\n            type: ERROR_TRACK_LIST,\r\n            payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n        });\r\n    })\r\n};\r\n/**\r\n * Updating the payment per track\r\n */\r\nexport const updateTrackPayment = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/managements/update-track\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: TRACK_UPDATE_PAYMENT,\r\n                payload: res.data.msg,\r\n            });\r\n        }).catch(err => {\r\n        dispatch({type: SHOW_SPINNING, payload: false});\r\n        dispatch({\r\n            type: TRACK_UPDATE_PAYMENT,\r\n            payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n        });\r\n    })\r\n};\r\n/**\r\n * Updating the payment per album\r\n */\r\nexport const updateAlbumPayment = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/managements/update-price-per-album\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: TRACK_UPDATE_PAYMENT,\r\n                payload: res.data.msg,\r\n            });\r\n        }).catch(err => {\r\n        dispatch({type: SHOW_SPINNING, payload: false});\r\n        dispatch({\r\n            type: TRACK_UPDATE_PAYMENT,\r\n            payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n        });\r\n    })\r\n};\r\n/**\r\n * Updating the paid amount\r\n */\r\nexport const updatePaid = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/managements/update-paid\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: UPDATE_PAID,\r\n                payload: res.data.msg,\r\n            });\r\n        }).catch(err => {\r\n        dispatch({type: SHOW_SPINNING, payload: false});\r\n        dispatch({\r\n            type: UPDATE_PAID,\r\n            payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n        });\r\n    })\r\n};\r\n/**\r\n * Extra to get the call from the existing site\r\n */\r\nexport const addPaymentInfo = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    instance\r\n        .post(\"/api/logs/add-played-track\", data)\r\n        // .post(\"/api/records/add-played-track\", data)\r\n        .then(res => {\r\n            console.log(res.data.msg);\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: TRACK_UPDATE_PAYMENT,\r\n                payload: res.data.msg,\r\n            });\r\n        }).catch(err => {\r\n        dispatch({type: SHOW_SPINNING, payload: false});\r\n        dispatch({\r\n            type: TRACK_UPDATE_PAYMENT,\r\n            payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n        });\r\n    })\r\n};","import React, {Component} from 'react';\r\nimport '../assets/css/dashboard.css';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    reset,\r\n    deleteUser,\r\n} from \"../redux/actions/users/publisher\";\r\nimport {toast} from \"react-toastify\";\r\nclass DeleteUser extends Component {\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.msg_user_delete && prevProps.msg_user_delete !== this.props.msg_user_delete) {\r\n            toast(this.props.msg_user_delete);\r\n            const {\r\n                reset,\r\n                handleClose,\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n\r\n                handleClose();\r\n                window.location.href = \"/user-list\";\r\n            }, 2000);\r\n        }\r\n    }\r\n    Cancel = () => {\r\n        const {\r\n            handleClose\r\n        } = this.props;\r\n\r\n        handleClose();\r\n    };\r\n    onDelete = (_id) => {\r\n        const data = {\r\n            role_id: localStorage.id,\r\n            id: _id,\r\n        };\r\n        const {\r\n            deleteUser\r\n        } = this.props;\r\n        deleteUser(data);\r\n    };\r\n    render() {\r\n        const showHideClassName = this.props.show ? \"modal-b display-modal-block\" : \"modal-b display-modal-none\";\r\n        return (\r\n            <div className={showHideClassName}>\r\n                <section className=\"modal-article\">\r\n                    <div className=\"create-modal-header txt-20 justify-left col-white\">Delete User</div>\r\n                    <div className=\"pt-30 pb-30 txt-18 justify-center\">Do you want to delete this user really?</div>\r\n                    <div className=\"flex-grid2 modal-grid2-gaps modal-p\">\r\n                        <div className=\"btn-common mouse-cursor justify-center col-white\" onClick={this.Cancel}>Cancel</div>\r\n                        <div className=\"btn-common mouse-cursor justify-center col-white\" onClick={() => this.onDelete(this.props.id)}>Delete</div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        msg_user_delete: state.users.msg_user_delete,\r\n    }\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        reset,\r\n        deleteUser,\r\n    }\r\n)(DeleteUser);\r\n\r\n","import React, {Component} from 'react';\r\nimport '../assets/css/dashboard.css';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    resetManagement,\r\n    updatePaid,\r\n} from \"../redux/actions/users/management\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nclass PaymentUpdate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tmr = null;\r\n        this.state = {\r\n            paid_amount: '',\r\n            detail: '',\r\n            paid_date: new Date(),\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.msg_paid && prevProps.msg_paid !== this.props.msg_paid) {\r\n            toast(this.props.msg_paid);\r\n            const {\r\n                resetManagement,\r\n                handleClose,\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                resetManagement();\r\n                this.tmr = null;\r\n                handleClose();\r\n                window.location.href = \"/user-list\";\r\n            }, 2000);\r\n            this.setState({\r\n                paid_amount: '',\r\n                detail: '',\r\n                paid_date: new Date(),\r\n            })\r\n        }\r\n    }\r\n    Cancel = () => {\r\n        const {\r\n            handleClose\r\n        } = this.props;\r\n        handleClose();\r\n        this.setState({\r\n            paid_amount: '',\r\n            detail: '',\r\n            paid_date: new Date(),\r\n        })\r\n    };\r\n    onPaymentUpdate = () => {\r\n        const data = {\r\n            role_id: localStorage.id,\r\n            publisher_id: this.props.item._id,\r\n            paid_amount: this.state.paid_amount,\r\n            comments: this.state.detail,\r\n            paid_date: this.state.paid_date,\r\n        };\r\n        const {\r\n            updatePaid\r\n        } = this.props;\r\n        updatePaid(data);\r\n        console.log(data)\r\n    };\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value || 0,\r\n        })\r\n    };\r\n    handleDate(date) {\r\n        this.setState({\r\n            paid_date: date,\r\n        });\r\n    };\r\n    render() {\r\n        const showHideClassName = this.props.show ? \"modal-b display-modal-block\" : \"modal-b display-modal-none\";\r\n        return (\r\n            <div className={showHideClassName}>\r\n                <div className=\"spinning-curtain\" style={{display: this.props.spinning ? \"flex\" : \"none\"}}>\r\n                    <div className=\"lds-dual-ring\"/>\r\n                </div>\r\n                <ToastContainer />\r\n                <section className=\"modal-article\">\r\n                    <div className=\"create-modal-header txt-20 justify-left col-white\">Payment</div>\r\n                    <div className=\"txt-16\" style={{padding: 30}}>\r\n                        <div className=\"pb-10\">Payment Amount</div>\r\n                        <div>\r\n                            <input\r\n                                id=\"paid_amount\"\r\n                                type=\"Number\"\r\n                                className=\"price-paid\"\r\n                                value={this.state.paid_amount}\r\n                                onChange={(e) => this.onChange(e)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"pt-20 pb-10\">Paid Date</div>\r\n                        <div>\r\n                            <DatePicker\r\n                                id=\"paid_date\"\r\n                                type=\"datetime-local\"\r\n                                showTimeSelect\r\n                                dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                className=\"price-paid\"\r\n                                selected={this.state.paid_date}\r\n                                maxDate={new Date().getTime()}\r\n                                timeIntervals=\"20\"\r\n                                onChange={(e) => this.handleDate(e)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"pt-20 pb-10\">\r\n                            Payment Comments\r\n                        </div>\r\n                        <textarea\r\n                            id=\"detail\"\r\n                            value={this.state.detail}\r\n                            className=\"payment-detail\"\r\n                            onChange={(e) => this.onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex-grid2 modal-grid2-gaps modal-p\">\r\n                        <div className=\"btn-common mouse-cursor justify-center col-white\" onClick={this.Cancel}>Cancel</div>\r\n                        <div className=\"btn-common mouse-cursor justify-center col-white\" onClick={this.onPaymentUpdate}>Ok</div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        spinning: state.users.spinning,\r\n        msg_paid: state.users.msg_paid,\r\n    }\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        resetManagement,\r\n        updatePaid,\r\n    }\r\n)(PaymentUpdate);\r\n\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    reset,\r\n    getUserList,\r\n    searchFilterUsers,\r\n} from \"../redux/actions/users/publisher\";\r\nimport {\r\n    resetManagement,\r\n    updatePaid,\r\n} from \"../redux/actions/users/management\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport DeleteUser from \"./modal-delete-user\";\r\nimport PaymentUpdate from \"./payment-modal\";\r\nconst config = require(\"../config/config\");\r\n\r\nclass UserList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            getUser_list: '',\r\n            current_page: 1,\r\n            page_neighbours: 2,\r\n            pagination: 10,\r\n            page_num: '',\r\n            delete_id: '',\r\n            show: false,\r\n            flag_edit: false,\r\n            paid_amount: '',\r\n            user_id: '',\r\n            showPayment: false,\r\n            payment_item: '',\r\n            user_name: '',\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(!localStorage.id) {\r\n            window.location.href = '/login';\r\n        }\r\n        this.onUserList();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.getUser_list && this.props.getUser_list !== prevProps.getUser_list) {\r\n            this.setState({\r\n                getUser_list: this.props.getUser_list.list,\r\n                page_num: this.props.getUser_list.page_num,\r\n            })\r\n        }\r\n        if(this.props.msg_get_users && this.props.msg_get_users !== prevProps.msg_get_users) {\r\n            toast(this.props.msg_get_users);\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 2000);\r\n            //this.onInitial();\r\n        }\r\n\r\n        if (this.props.get_search_users && this.props.get_search_users !== prevProps.get_search_users) {\r\n            this.setState({\r\n                getUser_list: this.props.get_search_users,\r\n                current_page: 1,\r\n                page_neighbours: 2,\r\n                pagination: 10,\r\n                page_num: '',\r\n                delete_id: '',\r\n                show: false,\r\n                flag_edit: false,\r\n                paid_amount: '',\r\n                user_id: '',\r\n                showPayment: false,\r\n                payment_item: '',\r\n            })\r\n        }\r\n        if (this.props.msg_user && this.props.msg_user !== prevProps.msg_user) {\r\n            toast(this.props.msg_user);\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 2000);\r\n        }\r\n    }\r\n    onUserList = () => {\r\n        const {\r\n            getUserList\r\n        } = this.props;\r\n        if(getUserList) {\r\n            const data = {\r\n                role_id: localStorage.id,\r\n                current_page: this.state.current_page,\r\n                page_neighbours: this.state.page_neighbours,\r\n                pagination: this.state.pagination,\r\n            };\r\n            getUserList(data);\r\n        }\r\n    };\r\n    onPageClick = (item) => {\r\n        this.setState({\r\n            current_page: item,\r\n        });\r\n        const {\r\n            getUserList\r\n        } = this.props;\r\n        const data = {\r\n            role_id: localStorage.id,\r\n            current_page: item,\r\n            page_neighbours: this.state.page_neighbours,\r\n            pagination: this.state.pagination,\r\n        };\r\n        if(getUserList) {\r\n            getUserList(data)\r\n        }\r\n        window.scrollTo(0, 0);\r\n    };\r\n    onEdit = (e) => {\r\n        this.props.history.push(\"/add-user/\" + e);\r\n    };\r\n    showModal = (e) => {\r\n        this.setState({\r\n            delete_id: e,\r\n            show: true,\r\n        })\r\n    };\r\n    hideModal = () => {\r\n        this.setState({ show: false });\r\n    };\r\n    showPaymentModal = (item) => {\r\n        this.setState({\r\n            showPayment: true,\r\n            payment_item: item,\r\n        })\r\n    };\r\n    hidePaymentModal = () => {\r\n        this.setState({\r\n            showPayment: false,\r\n            payment_item: '',\r\n        });\r\n    };\r\n    onView = (id) => {\r\n        this.props.history.push('/publisher/albums/' + id);\r\n    };\r\n    // onPaymentEdit = (item, amount, id) => {\r\n    //     this.setState({\r\n    //         user_id: id,\r\n    //         flag_edit: item,\r\n    //         paid_amount: '',\r\n    //     })\r\n    // };\r\n\r\n    // onUpdate = () => {\r\n    //     const {\r\n    //         updatePaid,\r\n    //     } = this.props;\r\n    //     if(updatePaid) {\r\n    //         const data = {\r\n    //             role_id: localStorage.id,\r\n    //             publisher_id: this.state.user_id,\r\n    //             paid_amount: this.state.paid_amount,\r\n    //         };\r\n    //         updatePaid(data);\r\n    //     }\r\n    //     this.setState({\r\n    //         flag_edit: '',\r\n    //         paid_amount: '',\r\n    //         user_id: '',\r\n    //     })\r\n    // };\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value || 0,\r\n        })\r\n    };\r\n\r\n    onSearchKeyUp = (code) => {\r\n        if (code === 13) {\r\n            this.onSearchUser()\r\n        }\r\n    };\r\n    onSearchUser = () => {\r\n        if (this.state.user_name === \"\") {\r\n            this.onPageClick(1);\r\n        } else {\r\n            const {\r\n                searchFilterUsers,\r\n            } = this.props;\r\n            if (searchFilterUsers) {\r\n                searchFilterUsers({\r\n                    role: localStorage.getItem('role'),\r\n                    user_name: this.state.user_name,\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const pageArray = [];\r\n        if(this.state.page_num) {\r\n            for (let k = this.state.page_num.start_page; k <= this.state.page_num.end_page; k ++) {\r\n                pageArray.push(k);\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"spinning-curtain\" style={{display: this.props.spinning ? \"flex\" : \"none\"}}>\r\n                    <div className=\"lds-dual-ring\"/>\r\n                </div>\r\n                <ToastContainer />\r\n                <div className=\"col-darkBlue txt-30 txt-bold pb-20 pl-40\">\r\n                    User List\r\n                </div>\r\n                <div className=\"form-bg\">\r\n                    <div className=\"justify-left user-search\">\r\n                        <div className=\"mr-id-10\">\r\n                            <input\r\n                                id=\"album_id\"\r\n                                className=\"count mouse-cursor\"\r\n                                placeholder=\"Please input user name\"\r\n                                value={this.state.user_name}\r\n                                onChange={(e) => this.setState({user_name: e.target.value})}\r\n                                onKeyUp={e => this.onSearchKeyUp(e.keyCode)}\r\n                            />\r\n                        </div>\r\n                        <div\r\n                            className=\"btn-common user-search mouse-cursor col-white\"\r\n                            onClick={this.onSearchUser}\r\n                        >\r\n                            Search\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-p\">\r\n                        <table className=\"tList\">\r\n                            <thead>\r\n                            <tr className=\"table-list\">\r\n                                <th>No</th>\r\n                                <th>Name</th>\r\n                                <th>Phone</th>\r\n                                <th>Email</th>\r\n                                <th>Country</th>\r\n                                <th>Bank Info</th>\r\n                                <th>Registered</th>\r\n                                <th>Paid</th>\r\n                                <th>Owed</th>\r\n                                <th>Total</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                this.state.getUser_list && this.state.getUser_list.map((item, key) => {\r\n                                    return (\r\n                                        <tr key={key} className=\"table-list\">\r\n                                            <td>{key + 1}</td>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.phone}</td>\r\n                                            <td>{item.email}</td>\r\n                                            <td>{item.country}</td>\r\n                                            <td>{item.bank_info}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    new Date(item.registered_date).toLocaleString([], {\r\n                                                    year: 'numeric',\r\n                                                    month: 'short',\r\n                                                    day: '2-digit',\r\n                                                    hour: '2-digit',\r\n                                                    minute: '2-digit',\r\n                                                    })\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <div>\r\n                                                    {\r\n                                                        (item.current_paid? item.current_paid: 0) + (this.state.flag_edit === item.name ? \" + \": '') + (item.currency ? item.currency : \"\")\r\n                                                    }\r\n                                                </div>\r\n                                            </td>\r\n                                            <td className=\"col-paragraphBg txt-bold\">\r\n                                                {(item.owed_amount? item.owed_amount: 0) + (item.currency ? item.currency : config.SYMBOL[0])}\r\n                                            </td>\r\n                                            <td>{(item.total_amount? item.total_amount: 0)  + (item.currency ? item.currency : config.SYMBOL[0])}</td>\r\n                                            <td className=\"flex-common\">\r\n                                                <div\r\n                                                    className=\"mr-10 mouse-cursor icon-flex tooltip\"\r\n                                                    //onClick={(e) => this.onPaymentEdit(item.name, item.current_paid, item._id)}\r\n                                                    onClick={() => this.showPaymentModal(item)}\r\n                                                >\r\n                                                    <img\r\n                                                        className=\"icon-size\"\r\n                                                        src={require(\"../assets/images/edit.svg\")}\r\n                                                        alt=\"\"/>\r\n                                                    <span className=\"tooltiptext\">Edit the current payment</span>\r\n                                                </div>\r\n\r\n                                                <div\r\n                                                    className=\"mr-10 mouse-cursor icon-flex tooltip\"\r\n                                                    onClick={(e) => this.onView(item._id)}\r\n                                                >\r\n                                                    <img\r\n                                                        className=\"icon-size\"\r\n                                                        src={require(\"../assets/images/view.svg\")}\r\n                                                        alt=\"\" />\r\n                                                    <span className=\"tooltiptext\">View the album list and payment history</span>\r\n                                                </div>\r\n                                                <div\r\n                                                    className=\"mr-10 mouse-cursor icon-flex tooltip\"\r\n                                                    onClick={(e) => this.onEdit(item._id)}\r\n                                                >\r\n                                                    <img\r\n                                                        className=\"icon-size\"\r\n                                                        src={require(\"../assets/images/settings.svg\")}\r\n                                                        alt=\"\" />\r\n                                                    <span className=\"tooltiptext\">Edit the publisher profile</span>\r\n                                                </div>\r\n                                                <div\r\n                                                    className=\"mouse-cursor icon-flex tooltip\"\r\n                                                    onClick={(e) => this.showModal(item._id)}\r\n                                                >\r\n                                                    <img\r\n                                                        className=\"icon-size\"\r\n                                                        src={require(\"../assets/images/bin-28.svg\")}\r\n                                                        alt=\"\" />\r\n                                                    <span className=\"tooltiptext\">Delete the publisher</span>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"help-center-align\">\r\n                        <div className=\"product-btn justify-center\" onClick={() => this.onPageClick(1)}>\r\n                            <svg width=\"11\" height=\"15\" viewBox=\"0 0 11 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M9.60496 14.6383C9.42024 14.6383 9.23359 14.5779 9.07773 14.457L0.923018 8.02084C0.724826 7.86414 0.609375 7.62814 0.609375 7.37704C0.609375 7.12782 0.724826 6.88993 0.923018 6.73512L9.0431 0.332906C9.40485 0.047818 9.934 0.104458 10.2246 0.459402C10.5151 0.814346 10.4574 1.33355 10.0956 1.61863L2.79141 7.37704L10.1322 13.1713C10.4939 13.4564 10.5517 13.9756 10.2611 14.3305C10.0937 14.5326 9.85126 14.6383 9.60496 14.6383Z\" fill=\"black\" fillOpacity=\"0.65\"/>\r\n                            </svg>\r\n                        </div>\r\n                        {\r\n                            this.state.page_num && pageArray && pageArray.map((item, key) => {\r\n                                return (\r\n                                    <div\r\n                                        className={this.state.current_page && this.state.current_page === item? \"product-btn justify-center btn-search\": \"product-btn justify-center col-darkBlue\"}\r\n                                        key={key}\r\n                                        onClick={() => this.onPageClick(item)}\r\n                                    >\r\n                                        {item}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <div className=\"product-btn justify-center\" onClick={() => this.onPageClick(this.state.page_num.total_page)}>\r\n                            <svg width=\"11\" height=\"15\" viewBox=\"0 0 11 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M1.39506 14.6383C1.57978 14.6383 1.76643 14.5779 1.92229 14.457L10.077 8.02084C10.2752 7.86414 10.3906 7.62814 10.3906 7.37704C10.3906 7.12782 10.2752 6.88993 10.077 6.73512L1.95692 0.332906C1.59518 0.047818 1.06603 0.104458 0.775474 0.459402C0.484922 0.814346 0.542647 1.33355 0.904394 1.61863L8.2086 7.37704L0.867834 13.1713C0.506087 13.4564 0.448362 13.9756 0.738914 14.3305C0.906319 14.5326 1.14877 14.6383 1.39506 14.6383Z\" fill=\"black\" fillOpacity=\"0.65\"/>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/*  Modal  */}\r\n                <DeleteUser\r\n                    show={this.state.show}\r\n                    id={this.state.delete_id}\r\n                    handleClose={this.hideModal}\r\n                />\r\n                <PaymentUpdate\r\n                    show={this.state.showPayment}\r\n                    handleClose={this.hidePaymentModal}\r\n                    item={this.state.payment_item}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        spinning: state.users.spinning,\r\n        getUser_list: state.users.getUser_list,\r\n        msg_get_users: state.users.msg_get_users,\r\n        msg_paid: state.users.msg_paid,\r\n        get_search_users: state.users.get_search_users,\r\n        msg_user: state.users.msg_user,\r\n    }\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        reset,\r\n        getUserList,\r\n\r\n        resetManagement,\r\n        updatePaid,\r\n        searchFilterUsers,\r\n    }\r\n)(UserList);","/**\r\n * The file for album creating/assigning, track editing/assigning\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport config from \"../../../config/index\";\r\nimport {\r\n    SHOW_SPINNING,\r\n    GET_EXISTING_ALBUM,\r\n    ERROR_ALBUM_LIST,\r\n    DELETE_ALBUM,\r\n    ADD_ALBUM,\r\n\r\n    GET_REGISTERED_ALBUMS,\r\n    ERROR_REGISTERED_ALBUM_LIST,\r\n\r\n    ASSIGN_ALBUMS,\r\n    ERROR_ASSIGN_ALBUMS,\r\n\r\n    GET_ALBUM_BYID,\r\n    ERROR_ALBUM_BYID,\r\n} from \"../types/types\";\r\n\r\nexport const reset = () => dispatch => {\r\n    dispatch({\r\n        type: ERROR_ALBUM_LIST,\r\n        payload: '',\r\n    });\r\n    dispatch({\r\n        type: ADD_ALBUM,\r\n        payload: '',\r\n    });\r\n    dispatch({\r\n        type: DELETE_ALBUM,\r\n        payload: '',\r\n    });\r\n    dispatch({\r\n        type: ERROR_ALBUM_BYID,\r\n        payload: '',\r\n    });\r\n};\r\n\r\nexport const resetList = () => dispatch => {\r\n    dispatch({\r\n        type: ERROR_REGISTERED_ALBUM_LIST,\r\n        payload: '',\r\n    });\r\n    dispatch({\r\n        type: ASSIGN_ALBUMS,\r\n        payload: '',\r\n    });\r\n    dispatch({\r\n        type: ERROR_ASSIGN_ALBUMS,\r\n        payload: '',\r\n    });\r\n};\r\n\r\nexport const getAlbumListFromSite = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/albums/get-albums-jewishmusic\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: GET_EXISTING_ALBUM,\r\n                payload: res.data.results,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ERROR_ALBUM_LIST,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\n\r\n/**\r\n * Getting data from one album_id\r\n */\r\nexport const getAlbumByIdFromSite = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/albums/get-byid-jewishmusic\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: GET_ALBUM_BYID,\r\n                payload: res.data.results,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ERROR_ALBUM_BYID,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\n\r\nexport const addAlbumFromSite = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/albums/add-album\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ADD_ALBUM,\r\n                payload: res.data.msg,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ADD_ALBUM,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\n\r\nexport const addTrackFromSite = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/albums/add-track\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ADD_ALBUM,\r\n                payload: res.data.msg,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ADD_ALBUM,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\n\r\nexport const deleteAlbum = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/albums/delete-album\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: DELETE_ALBUM,\r\n                payload: res.data.msg,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: DELETE_ALBUM,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\nexport const deleteTrack = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/albums/delete-track\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: DELETE_ALBUM,\r\n                payload: res.data.msg,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: DELETE_ALBUM,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\n/**\r\n * Getting the registered album list\r\n */\r\nexport const getRegisteredAlbumList = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/albums/get-registered-albums\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: GET_REGISTERED_ALBUMS,\r\n                payload: res.data.results,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ERROR_REGISTERED_ALBUM_LIST,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\n\r\n/**\r\n * Searching the registered album list\r\n */\r\nexport const searchRegisteredAlbum = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/albums/search-registered-album\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: GET_REGISTERED_ALBUMS,\r\n                payload: res.data.results,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ERROR_REGISTERED_ALBUM_LIST,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\n/**\r\n * Assigning albums\r\n */\r\nexport const assignAlbumsToUser = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/albums/assign-albums\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ASSIGN_ALBUMS,\r\n                payload: res.data.msg,\r\n            });\r\n        }).catch(err => {\r\n        dispatch({type: SHOW_SPINNING, payload: false});\r\n        dispatch({\r\n            type: ERROR_ASSIGN_ALBUMS,\r\n            payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n        });\r\n    })\r\n};\r\n/**\r\n * Getting the assigned album list to the publisher\r\n */\r\nexport const getAssignedAlbumsById = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/albums/get-assigned-albums\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: GET_REGISTERED_ALBUMS,\r\n                payload: res.data.results,\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ERROR_REGISTERED_ALBUM_LIST,\r\n                payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n            });\r\n        })\r\n};\r\n/**\r\n * Assigning albums\r\n */\r\nexport const unassignAlbumsToUser = (data) => dispatch => {\r\n    dispatch({type: SHOW_SPINNING, payload: true});\r\n    axios\r\n        .post(config.SIM_API_URL + \"/api/albums/unassign-albums-user\", data)\r\n        .then(res => {\r\n            dispatch({type: SHOW_SPINNING, payload: false});\r\n            dispatch({\r\n                type: ASSIGN_ALBUMS,\r\n                payload: res.data.msg,\r\n            });\r\n        }).catch(err => {\r\n        dispatch({type: SHOW_SPINNING, payload: false});\r\n        dispatch({\r\n            type: ERROR_ASSIGN_ALBUMS,\r\n            payload: err.response ? err.response.data.msg : {error: \"error\"},\r\n        });\r\n    })\r\n};","import React, {Component} from 'react';\r\nimport '../assets/css/dashboard.css';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    reset,\r\n    deleteAlbum,\r\n    deleteTrack,\r\n} from \"../redux/actions/users/get-data-site\";\r\nimport {toast} from \"react-toastify\";\r\nclass DeleteAlbum extends Component {\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.msg_album_delete && prevProps.msg_album_delete !== this.props.msg_album_delete) {\r\n            toast(this.props.msg_album_delete);\r\n            const {\r\n                reset,\r\n                handleClose,\r\n            } = this.props;\r\n            const self = this;\r\n            clearTimeout(self.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                self.tmr = null;\r\n\r\n                handleClose();\r\n                window.location.href = self.props.path;\r\n            }, 2000);\r\n        }\r\n    }\r\n    Cancel = () => {\r\n        const {\r\n            handleClose\r\n        } = this.props;\r\n\r\n        handleClose();\r\n    };\r\n    onDelete = (albums) => {\r\n        if(this.props.flag === false) {\r\n            const data = {\r\n                role_id: localStorage.id,\r\n                albums: albums,\r\n                // language: this.props.lang,\r\n            };\r\n            const {\r\n                deleteAlbum,\r\n            } = this.props;\r\n            deleteAlbum(data);\r\n        } else {\r\n            const data = {\r\n                role_id: localStorage.id,\r\n                id: this.props.id,\r\n                tracks: albums,\r\n                // language: this.props.lang,\r\n            };\r\n            const {\r\n                deleteTrack,\r\n            } = this.props;\r\n            deleteTrack(data);\r\n        }\r\n    };\r\n    render() {\r\n        const showHideClassName = this.props.show ? \"modal-b display-modal-block\" : \"modal-b display-modal-none\";\r\n        return (\r\n            <div className={showHideClassName}>\r\n                <section className=\"modal-article\">\r\n                    <div className=\"create-modal-header txt-20 justify-left col-white\">Cancel {this.props.flag? \"Track \": \"Album \"} Registration</div>\r\n\r\n                    <div className=\"pt-30 pb-30 txt-18 justify-center\">Would you like to unregister these {this.props.flag? \"tracks\": \"albums\"}?</div>\r\n\r\n                    <div className=\"flex-grid2 modal-grid2-gaps modal-p\">\r\n                        <div className=\"btn-common mouse-cursor justify-center col-white\" onClick={this.Cancel}>Cancel</div>\r\n                        <div className=\"btn-common mouse-cursor justify-center col-white\" onClick={() => this.onDelete(this.props.albums)}>Unregister</div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        msg_album_delete: state.users.msg_album_delete,\r\n    }\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        reset,\r\n        deleteAlbum,\r\n        deleteTrack,\r\n    }\r\n)(DeleteAlbum);\r\n\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport \"../assets/css/dashboard.css\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    reset,\r\n    getAlbumListFromSite,\r\n    addAlbumFromSite,\r\n    getAlbumByIdFromSite,\r\n    addTrackFromSite,\r\n} from \"../redux/actions/users/get-data-site\";\r\nimport DeleteAlbum from \"./modal-delete-album\";\r\n\r\nclass AddAlbum extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tmr = null;\r\n        this.state = {\r\n            album_list: [],\r\n            new_checked: [],\r\n            show: false,\r\n            allChecked: false,\r\n            delete_album_id: '',\r\n            action_flag: true,\r\n\r\n            album_id: '',\r\n            flag_input: false,\r\n            get_album: '',\r\n\r\n            current_page: 1,\r\n            language: 'en',\r\n\r\n            page_neighbours: 3,\r\n            pagination: 10,\r\n            page_num: '',\r\n\r\n            pageArray: [1, 2, 3, 4],\r\n            total_page: 100,\r\n        };\r\n\r\n        this.onCheckBox = this.onCheckBox.bind(this);\r\n        this.onAllCheck = this.onAllCheck.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onInitial();\r\n        this.getDataFromSite();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.get_album_list && this.props.get_album_list !== prevProps.get_album_list) {\r\n            this.setState({\r\n                album_list: this.props.get_album_list,\r\n            });\r\n        }\r\n        if(this.props.msg_album_list_error && this.props.msg_album_list_error !== prevProps.msg_album_list_error) {\r\n            toast(this.props.msg_album_list_error);\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 2000);\r\n        }\r\n        if(this.state.current_page !== prevState.current_page || this.state.language !== prevState.language || this.state.pagination !== prevState.pagination) {\r\n            if(!this.state.flag_input) {\r\n                this.getDataFromSite();\r\n            }\r\n        }\r\n        if(this.props.msg_create_album && this.props.msg_create_album !== prevProps.msg_create_album) {\r\n            toast(this.props.msg_create_album);\r\n            const {\r\n                reset,\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 2000);\r\n            if(!this.state.flag_input) {\r\n                this.getDataFromSite();\r\n            } else {\r\n                this.getByAlbumId();\r\n            }\r\n        }\r\n\r\n        // Check all\r\n        if(this.state.allChecked !== prevState.allChecked) {\r\n            const temp = [];\r\n            if(this.state.allChecked === true) {\r\n                if(this.state.flag_input === false) {\r\n                    let list =  this.state.album_list;\r\n                    Object.keys(list).map((item, key) => {\r\n                        if(!this.state.action_flag && list[key].state === 1) {\r\n                            temp.push(list[key].id.toString());\r\n                        } else if(this.state.action_flag && list[key].state !== 1) {\r\n                            temp.push(list[key].id.toString());\r\n                        }\r\n                        return null;\r\n                    });\r\n                } else {\r\n                    let list = this.state.get_album && this.state.get_album.tracks;\r\n                    Object.keys(list).map((item, key) => {\r\n                        if(!this.state.action_flag && list[key].state === 1) {\r\n                            temp.push(list[key].url.toString());\r\n                        } else if(this.state.action_flag && list[key].state !== 1) {\r\n                            temp.push(list[key].url.toString());\r\n                        }\r\n                        return null;\r\n                    });\r\n                }\r\n                this.setState({\r\n                    new_checked: temp,\r\n                })\r\n            }\r\n        }\r\n        if(this.state.new_checked !== prevState.new_checked) {\r\n            let temp = [];\r\n            if(this.state.flag_input === false) {\r\n                let list =  this.state.album_list;\r\n                Object.keys(list).map((item, key) => {\r\n                    if(!this.state.action_flag && list[key].state === 1) {\r\n                        temp.push(list[key].id.toString());\r\n                    } else if(this.state.action_flag && list[key].state !== 1) {\r\n                        temp.push(list[key].id.toString());\r\n                    }\r\n                    return null;\r\n                });\r\n            } else {\r\n                let list = this.state.get_album && this.state.get_album.tracks;\r\n                Object.keys(list).map((item, key) => {\r\n                    if(!this.state.action_flag && list[key].state === 1) {\r\n                        temp.push(list[key].url.toString());\r\n                    } else if(this.state.action_flag && list[key].state !== 1) {\r\n                        temp.push(list[key].url.toString());\r\n                    }\r\n                    return null;\r\n                });\r\n            }\r\n            if(this.state.new_checked.length > 0 && this.state.new_checked.length === temp.length) {\r\n                this.setState({\r\n                    allChecked: true,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    allChecked: false,\r\n                })\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Getting data from one album id\r\n         */\r\n        if(this.props.msg_album_byId && this.props.msg_album_byId !== prevProps.msg_album_byId) {\r\n            toast(this.props.msg_album_byId);\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 2000);\r\n        }\r\n\r\n        if(this.props.get_album_byId && this.props.get_album_byId !== prevProps.get_album_byId) {\r\n            this.setState({\r\n                get_album: this.props.get_album_byId,\r\n            });\r\n        }\r\n        if(this.state.language !== prevState.language && this.state.flag_input) {\r\n            this.getByAlbumId();\r\n        }\r\n    }\r\n\r\n    getDataFromSite = () => {\r\n        let link = \"https://jewishmusic.fm/jmusic/albums/get_all_albums?page=\" + this.state.current_page+ \"&count=\" + this.state.pagination + \"&lang=\" + this.state.language;\r\n        const {\r\n            getAlbumListFromSite,\r\n        } = this.props;\r\n        if(getAlbumListFromSite) {\r\n            const data = {\r\n                role_id: localStorage.id,\r\n                link: link,\r\n            };\r\n            getAlbumListFromSite(data);\r\n        }\r\n    };\r\n    onCount = (e) => {\r\n        this.setState({\r\n            pagination: e.target.value,\r\n            allChecked: false,\r\n            new_checked: [],\r\n        })\r\n    };\r\n\r\n    onLanguage = (e) => {\r\n        this.setState({\r\n            language: e.target.value,\r\n            allChecked: false,\r\n            new_checked: [],\r\n        });\r\n    };\r\n    onPageClick = (item) => {\r\n        this.setState({\r\n            current_page: item,\r\n            action_flag: true,\r\n            new_checked: [],\r\n            allChecked: false,\r\n        });\r\n        this.onCalcPageArray(item);\r\n    };\r\n    onCalcPageArray = (item) => {\r\n        const current_page = item;\r\n        const page_neighbours = this.state.page_neighbours;\r\n\r\n        const total_page = this.state.total_page;\r\n        //const total_page = Math.ceil(total_list_count / pagination);\r\n\r\n        const start_page = Math.max(1, current_page - page_neighbours);\r\n        const end_page = Math.min(total_page, current_page + page_neighbours);\r\n        let pageArray = [];\r\n        for (let k = start_page; k <= end_page; k ++) {\r\n            pageArray.push(k);\r\n        }\r\n        this.setState({\r\n            pageArray: pageArray,\r\n        })\r\n    };\r\n\r\n    onInitial = () => {\r\n        this.setState({\r\n            album_list: [],\r\n            new_checked: [],\r\n            show: false,\r\n            allChecked: false,\r\n            delete_album_id: '',\r\n            action_flag: true,\r\n\r\n            album_id: '',\r\n            flag_input: false,\r\n            get_album: '',\r\n\r\n            current_page: 1,\r\n            language: 'en',\r\n\r\n            page_neighbours: 3,\r\n            pagination: 10,\r\n            page_num: '',\r\n\r\n            pageArray: [1, 2, 3, 4],\r\n            total_page: 100,\r\n        })\r\n    };\r\n\r\n    onAddAlbum = () => {\r\n        if(this.state.flag_input === false) {\r\n            const {\r\n                addAlbumFromSite\r\n            } = this.props;\r\n            if(addAlbumFromSite) {\r\n                const data = {\r\n                    role_id: localStorage.id,\r\n                    id: this.state.new_checked,\r\n                    lang: this.state.language,\r\n                };\r\n                addAlbumFromSite(data);\r\n            }\r\n        } else {\r\n            const {\r\n                addTrackFromSite\r\n            } = this.props;\r\n            if(addTrackFromSite) {\r\n                let tracks = this.state.get_album.tracks;\r\n                let new_checked = this.state.new_checked;\r\n                let send_tracks = [];\r\n                for (let k = 0; k < new_checked.length; k ++) {\r\n                    for (let i = 0; i < tracks.length; i ++) {\r\n                        if (new_checked[k] === tracks[i].url) {\r\n                            send_tracks.push({\r\n                                download: tracks[i].download,\r\n                                title: tracks[i].title,\r\n                                url: tracks[i].url,\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                const data = {\r\n                    role_id: localStorage.id,\r\n                    album: this.state.get_album,\r\n                    tracks_url: this.state.new_checked,\r\n                    tracks: send_tracks,//this.state.new_checked,\r\n                    lang: this.state.language,\r\n                };\r\n                addTrackFromSite(data);\r\n            }\r\n        }\r\n        this.setState({\r\n            new_checked: [],\r\n            allChecked: false,\r\n        })\r\n    };\r\n    onShowDeleteModal = () => {\r\n        this.setState({\r\n            show: true,\r\n            delete_album_id: this.state.new_checked,\r\n        })\r\n    };\r\n    hideDeleteModal = () => {\r\n        this.setState({\r\n            show: false,\r\n            new_checked: [],\r\n            allChecked: false,\r\n        });\r\n    };\r\n\r\n    /**\r\n     * For registration of albums or tracks\r\n     */\r\n    onCheckBox = (e) => {\r\n        const {\r\n            new_checked\r\n        } = this.state;\r\n        const temp = JSON.parse(JSON.stringify(new_checked));\r\n        if(e.target.checked === true){\r\n            temp.push(e.target.id);\r\n        } else{\r\n            temp.splice(temp.indexOf(e.target.id), 1);\r\n        }\r\n        this.setState({new_checked: temp});\r\n    };\r\n    onActionClick = () => {\r\n        this.setState({\r\n            action_flag: !this.state.action_flag,\r\n            new_checked: [],\r\n            allChecked: false,\r\n        })\r\n    };\r\n    onAllCheck = () => {\r\n        this.setState({\r\n            allChecked: !this.state.allChecked,\r\n            new_checked: [],\r\n        });\r\n    };\r\n\r\n    onAlbumId = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value || '',\r\n        })\r\n    };\r\n    onInputAlbumId = (code) => {\r\n        if (code === 13) {\r\n            if(this.state.album_id !== \"\") {\r\n                this.setState({\r\n                    flag_input: true,\r\n                });\r\n                this.getByAlbumId();\r\n            } else {\r\n                this.setState({\r\n                    flag_input: false,\r\n                    get_album: '',\r\n                });\r\n            }\r\n            this.setState({\r\n                new_checked: [],\r\n                allChecked: false,\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * calling by album_id\r\n     */\r\n    getByAlbumId = () => {\r\n        const {\r\n            getAlbumByIdFromSite,\r\n        } = this.props;\r\n        if(getAlbumByIdFromSite) {\r\n            const data = {\r\n                role_id: localStorage.id,\r\n                id: this.state.album_id,\r\n                lang: this.state.language,\r\n            };\r\n            getAlbumByIdFromSite(data);\r\n        }\r\n    };\r\n    onBack = () => {\r\n        this.setState({\r\n            flag_input: false,\r\n        })\r\n    };\r\n    render() {\r\n        const {\r\n            album_list,\r\n        } = this.state;\r\n\r\n        const paginationArray = [10, 15, 25, 50];\r\n        return (\r\n            <>\r\n                <div className=\"spinning-curtain\" style={{display: this.props.spinning ? \"flex\" : \"none\"}}>\r\n                    <div className=\"lds-dual-ring\"/>\r\n                </div>\r\n                <ToastContainer />\r\n                <div className=\"col-darkBlue txt-30 txt-bold pb-20 pl-40\">\r\n                    {\r\n                        this.state.flag_input?\r\n                            \"Track List\"\r\n                            :\r\n                            \"Album List\"\r\n                    }\r\n                </div>\r\n                <div className=\"form-bg\">\r\n                    <div className=\"flex-space album-list\">\r\n                        <div className=\"justify-left add-album\">\r\n                            {\r\n                                !this.state.flag_input && (\r\n                                    <>\r\n                                        <div className=\"justify-center col-buttonAndLink\">Counts</div>\r\n                                        <div>\r\n                                            <select\r\n                                                className=\"count mouse-cursor\"\r\n                                                onChange={this.onCount}\r\n                                            >\r\n                                                {\r\n                                                    paginationArray.map((item, key) => {\r\n                                                        return (\r\n                                                            <option key={key} value={item}>{item}</option>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            <div className=\"justify-center col-buttonAndLink ml-40\">Language</div>\r\n                            <div>\r\n                                <select\r\n                                    className=\"count mouse-cursor\"\r\n                                    style={{marginLeft: 20, marginRight: 20}}\r\n                                    value={this.state.language}\r\n                                    onChange={(e) => this.onLanguage(e)}\r\n                                >\r\n                                    <option key=\"1\" value=\"en\">English</option>\r\n                                    <option key=\"2\" value=\"he\">Hebrew</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"justify-center col-buttonAndLink ml-40\" style={{marginRight: 10}}>Album ID</div>\r\n                            <div className=\"mr-id-10\">\r\n                                <input\r\n                                    id=\"album_id\"\r\n                                    className=\"count mouse-cursor\"\r\n                                    placeholder=\"Album Id for registration.\"\r\n                                    value={this.state.album_id}\r\n                                    onChange={(e) => this.onAlbumId(e)}\r\n                                    onKeyUp={e => this.onInputAlbumId(e.keyCode)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.flag_input && (\r\n                                <div\r\n                                    className=\"btn-common action mouse-cursor col-white mr-id-10\"\r\n                                    onClick={this.onBack}\r\n                                >\r\n                                    Back\r\n                                </div>\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.action_flag?\r\n                                <div\r\n                                    className=\"btn-common action mouse-cursor col-white\"\r\n                                    onClick={this.onAddAlbum}\r\n                                >\r\n                                    Register\r\n                                </div>\r\n                                :\r\n                                <div\r\n                                    className=\"btn-common action mouse-cursor col-white\"\r\n                                    onClick={this.onShowDeleteModal}\r\n                                >\r\n                                    Unregister\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    {\r\n                        !this.state.flag_input?\r\n                            <>\r\n                                <div className=\"table-p\">\r\n                                    <table className=\"tList\">\r\n                                        <thead>\r\n                                        <tr className=\"table-list\">\r\n                                            <th>No</th>\r\n                                            <th>ID</th>\r\n                                            <th>Name</th>\r\n                                            <th>Date</th>\r\n                                            <th>Image</th>\r\n                                            <th>State</th>\r\n                                            <th\r\n                                                className=\"mouse-cursor\"\r\n                                            >\r\n                                                {\r\n                                                    this.state.action_flag ?\r\n                                                        <div className=\"justify-left\" style={{paddingTop: 13}}>\r\n                                                            <label className=\"container-event justify-left\">\r\n                                                                <div\r\n                                                                    className=\"col-paragraphBg\"\r\n                                                                    onClick={this.onActionClick}\r\n                                                                >\r\n                                                                    Register\r\n                                                                </div>\r\n                                                                <input\r\n                                                                    type=\"checkbox\"\r\n                                                                    checked={this.state.allChecked}\r\n                                                                    onChange={this.onAllCheck}\r\n                                                                />\r\n                                                                <span className=\"checkMark\"/>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        :\r\n                                                        <div className=\"justify-left\" style={{paddingTop: 13}}>\r\n                                                            <label className=\"container-event justify-left\">\r\n                                                                <div\r\n                                                                    className=\"col-paragraphBg\"\r\n                                                                    onClick={this.onActionClick}\r\n                                                                >\r\n                                                                    Unregister\r\n                                                                </div>\r\n                                                                <input\r\n                                                                    type=\"checkbox\"\r\n                                                                    checked={this.state.allChecked}\r\n                                                                    onChange={this.onAllCheck}\r\n                                                                />\r\n                                                                <span className=\"checkMark\"/>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                }\r\n                                            </th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {\r\n                                            this.state.album_list && Object.keys(this.state.album_list).map((item, key) => {\r\n                                                return (\r\n                                                    <tr key={key}>\r\n                                                        <td style={{paddingLeft: 20}}>\r\n                                                            {key + 1}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {album_list[key].id}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <div dangerouslySetInnerHTML={{__html: album_list[key].title}} />\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {\r\n                                                                new Date(album_list[key].date).toLocaleString([], {\r\n                                                                    year: 'numeric',\r\n                                                                    month: 'short',\r\n                                                                    day: '2-digit',\r\n                                                                    hour: '2-digit',\r\n                                                                    minute: '2-digit',\r\n                                                                })\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {\r\n                                                                album_list[key].thumbnail && (\r\n                                                                    <img className=\"thumbnail-size\" src={album_list[key].thumbnail} alt=\"\" />\r\n                                                                )\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td className=\"flex-common\">\r\n                                                            {\r\n                                                                album_list[key].state === 1?\r\n                                                                    <div\r\n                                                                        className=\"icon-flex tooltip\"\r\n                                                                    >\r\n                                                                        <img\r\n                                                                            className=\"icon-size\"\r\n                                                                            src={require(\"../assets/images/bin-28.svg\")}\r\n                                                                            alt=\"View\"\r\n                                                                        />\r\n                                                                        <span className=\"tooltiptext\">The registered Album</span>\r\n                                                                    </div>\r\n                                                                    :\r\n                                                                    <div\r\n                                                                        className=\"icon-flex tooltip\"\r\n                                                                    >\r\n                                                                        <img\r\n                                                                            className=\"icon-size\"\r\n                                                                            src={require(\"../assets/images/add.svg\")}\r\n                                                                            alt=\"Edit\" />\r\n                                                                        <span className=\"tooltiptext\">Add the Album</span>\r\n                                                                    </div>\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {\r\n                                                                !this.state.action_flag && album_list[key].state === 1 && (\r\n                                                                    <label className=\"container-event\" key={key}>\r\n                                                                        <input\r\n                                                                            id={album_list[key].id}\r\n                                                                            type=\"checkbox\"\r\n                                                                            checked={this.state.new_checked.includes(album_list[key].id.toString())}\r\n                                                                            onChange={(e) => this.onCheckBox(e)}\r\n                                                                        />\r\n                                                                        <span className=\"checkMark\"/>\r\n                                                                    </label>\r\n                                                                )\r\n                                                            }\r\n                                                            {\r\n                                                                this.state.action_flag && album_list[key].state !== 1 && (\r\n                                                                    <label className=\"container-event\" key={key}>\r\n                                                                        <input\r\n                                                                            id={album_list[key].id}\r\n                                                                            type=\"checkbox\"\r\n                                                                            checked={this.state.new_checked.includes(album_list[key].id.toString())}\r\n                                                                            onChange={(e) => this.onCheckBox(e)}\r\n                                                                        />\r\n                                                                        <span className=\"checkMark\"/>\r\n                                                                    </label>\r\n                                                                )\r\n                                                            }\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div className=\"help-center-align\">\r\n                                    <div className=\"product-btn justify-center\" onClick={() => this.onPageClick(1)}>\r\n                                        <svg width=\"11\" height=\"15\" viewBox=\"0 0 11 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M9.60496 14.6383C9.42024 14.6383 9.23359 14.5779 9.07773 14.457L0.923018 8.02084C0.724826 7.86414 0.609375 7.62814 0.609375 7.37704C0.609375 7.12782 0.724826 6.88993 0.923018 6.73512L9.0431 0.332906C9.40485 0.047818 9.934 0.104458 10.2246 0.459402C10.5151 0.814346 10.4574 1.33355 10.0956 1.61863L2.79141 7.37704L10.1322 13.1713C10.4939 13.4564 10.5517 13.9756 10.2611 14.3305C10.0937 14.5326 9.85126 14.6383 9.60496 14.6383Z\" fill=\"black\" fillOpacity=\"0.65\"/>\r\n                                        </svg>\r\n                                    </div>\r\n\r\n                                    {\r\n                                        this.state.pageArray && this.state.pageArray.map((item, key) => {\r\n                                            return (\r\n                                                <div\r\n                                                    className={this.state.current_page && this.state.current_page === item? \"product-btn justify-center btn-search\": \"product-btn justify-center col-darkBlue\"}\r\n                                                    key={key}\r\n                                                    onClick={() => this.onPageClick(item)}\r\n                                                >\r\n                                                    {item}\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <div className=\"product-btn justify-center\" onClick={() => this.onPageClick(this.state.total_page)}>\r\n                                        <svg width=\"11\" height=\"15\" viewBox=\"0 0 11 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M1.39506 14.6383C1.57978 14.6383 1.76643 14.5779 1.92229 14.457L10.077 8.02084C10.2752 7.86414 10.3906 7.62814 10.3906 7.37704C10.3906 7.12782 10.2752 6.88993 10.077 6.73512L1.95692 0.332906C1.59518 0.047818 1.06603 0.104458 0.775474 0.459402C0.484922 0.814346 0.542647 1.33355 0.904394 1.61863L8.2086 7.37704L0.867834 13.1713C0.506087 13.4564 0.448362 13.9756 0.738914 14.3305C0.906319 14.5326 1.14877 14.6383 1.39506 14.6383Z\" fill=\"black\" fillOpacity=\"0.65\"/>\r\n                                        </svg>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                {\r\n                                    this.state.get_album && (\r\n                                        <>\r\n                                            <div className=\"flex-grid2 album-grid\">\r\n                                                <div className=\"album-grid-mt\">\r\n                                                    <img\r\n                                                        className=\"album-img mouse-cursor\"\r\n                                                        src={this.state.get_album.thumbnail_images.full.url}\r\n                                                        onClick={() => window.location = this.state.get_album.buttons}\r\n                                                        alt=\"\" />\r\n                                                </div>\r\n\r\n                                                <div className=\"album-grid-mt justify-center col-darkBlue\">\r\n                                                    <div>\r\n                                                        <div className=\"justify-center\">\r\n                                                            <img\r\n                                                                className=\"album-thumbnail-img mouse-cursor\"\r\n                                                                src={this.state.get_album.thumbnail}\r\n                                                                onClick={() => window.location = this.state.get_album.buttons}\r\n                                                                alt=\"\"\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"pt-10 justify-center txt-bold txt-20\">\r\n                                                            Title:\r\n                                                        </div>\r\n                                                        <div className=\"justify-center\">\r\n                                                            <div dangerouslySetInnerHTML={{__html: this.state.get_album.title}} />\r\n                                                        </div>\r\n                                                        <div className=\"pt-10 justify-center txt-bold txt-20\">\r\n                                                            Articles:\r\n                                                        </div>\r\n                                                        <table className=\"tList\">\r\n                                                            <thead>\r\n                                                            <tr className=\"table-list album\">\r\n                                                                <th>No</th>\r\n                                                                <th>Id</th>\r\n                                                                <th>Name</th>\r\n                                                            </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                            {\r\n                                                                this.state.get_album.taxonomy_artists.map((item, key) => {\r\n                                                                    return (\r\n                                                                        <tr key={key} className=\"table-list album\">\r\n                                                                            <td>{key + 1}</td>\r\n                                                                            <td>{item.id}</td>\r\n                                                                            <td>\r\n                                                                                <div dangerouslySetInnerHTML={{__html: item.title}} />\r\n                                                                            </td>\r\n                                                                        </tr>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className=\"pt-30 pb-10 justify-center col-paragraphBg txt-20\">Tracks</div>\r\n                                            </div>\r\n                                            <div className=\"table-p\">\r\n                                                <table className=\"tList\">\r\n                                                    <thead>\r\n                                                    <tr className=\"table-list album\">\r\n                                                        <th>No</th>\r\n                                                        <th>Title</th>\r\n                                                        <th>Url</th>\r\n                                                        <th>Download</th>\r\n                                                        <th>\r\n                                                            {\r\n                                                                this.state.action_flag ?\r\n                                                                    <div className=\"justify-left\" style={{paddingTop: 13}}>\r\n                                                                        <label className=\"container-event justify-left\">\r\n                                                                            <div\r\n                                                                                className=\"col-paragraphBg\"\r\n                                                                                onClick={this.onActionClick}\r\n                                                                            >\r\n                                                                                Register\r\n                                                                            </div>\r\n                                                                            <input\r\n                                                                                type=\"checkbox\"\r\n                                                                                checked={this.state.allChecked}\r\n                                                                                onChange={this.onAllCheck}\r\n                                                                            />\r\n                                                                            <span className=\"checkMark\"/>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    :\r\n                                                                    <div className=\"justify-left\" style={{paddingTop: 13}}>\r\n                                                                        <label className=\"container-event justify-left\">\r\n                                                                            <div\r\n                                                                                className=\"col-paragraphBg\"\r\n                                                                                onClick={this.onActionClick}\r\n                                                                            >\r\n                                                                                Unregister\r\n                                                                            </div>\r\n                                                                            <input\r\n                                                                                type=\"checkbox\"\r\n                                                                                checked={this.state.allChecked}\r\n                                                                                onChange={this.onAllCheck}\r\n                                                                            />\r\n                                                                            <span className=\"checkMark\"/>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                            }\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        this.state.get_album.tracks.map((item, key) => {\r\n                                                            console.log(item, \" = item\")\r\n                                                            return (\r\n                                                                <tr key={key} className=\"table-list album\">\r\n                                                                    <td>{key + 1}</td>\r\n                                                                    <td>\r\n                                                                        <div dangerouslySetInnerHTML={{__html: item.title}} />\r\n                                                                    </td>\r\n                                                                    <td>{item.url}</td>\r\n                                                                    <td>{item.download === \"\"? 0: item.download}</td>\r\n                                                                    <td>\r\n                                                                        {\r\n                                                                            !this.state.action_flag && item.state === 1 && (\r\n                                                                                <label className=\"container-event\" key={key}>\r\n                                                                                    <input\r\n                                                                                        id={item.url}\r\n                                                                                        type=\"checkbox\"\r\n                                                                                        checked={this.state.new_checked.includes(item.url.toString())}\r\n                                                                                        onChange={(e) => this.onCheckBox(e)}\r\n                                                                                    />\r\n                                                                                    <span className=\"checkMark\"/>\r\n                                                                                </label>\r\n                                                                            )\r\n                                                                        }\r\n                                                                        {\r\n                                                                            this.state.action_flag && item.state !== 1 && (\r\n                                                                                <label className=\"container-event\" key={key}>\r\n                                                                                    <input\r\n                                                                                        id={item.url}\r\n                                                                                        type=\"checkbox\"\r\n                                                                                        checked={this.state.new_checked.includes(item.url.toString())}\r\n                                                                                        onChange={(e) => this.onCheckBox(e)}\r\n                                                                                    />\r\n                                                                                    <span className=\"checkMark\"/>\r\n                                                                                </label>\r\n                                                                            )\r\n                                                                        }\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </>\r\n                                    )\r\n                                }\r\n\r\n                            </>\r\n                    }\r\n                </div>\r\n                {/*  Modal  */}\r\n                {\r\n                    !this.state.flag_input ?\r\n                        <DeleteAlbum\r\n                            show={this.state.show}\r\n                            handleClose={this.hideDeleteModal}\r\n                            lang={this.state.language}\r\n                            albums={this.state.delete_album_id}\r\n                            flag={this.state.flag_input}\r\n                            path={'/add-album'}\r\n                        />\r\n                        :\r\n                        <DeleteAlbum\r\n                            show={this.state.show}\r\n                            handleClose={this.hideDeleteModal}\r\n                            lang={this.state.language}\r\n                            albums={this.state.delete_album_id}\r\n                            flag={this.state.flag_input}\r\n                            id={this.state.album_id}\r\n                            path={'/add-album'}\r\n                        />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        spinning: state.users.spinning,\r\n        get_album_list: state.users.get_album_list,\r\n        msg_album_list_error: state.users.msg_album_list_error,\r\n        msg_create_album: state.users.msg_create_album,\r\n        get_album_byId: state.users.get_album_byId,\r\n        msg_album_byId: state.users.msg_album_byId,\r\n    }\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        reset,\r\n        getAlbumListFromSite,\r\n        addAlbumFromSite,\r\n        getAlbumByIdFromSite,\r\n        addTrackFromSite,\r\n    }\r\n)(AddAlbum);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    reset,\r\n    getAllUsers,\r\n} from \"../redux/actions/users/publisher\";\r\nimport {\r\n    resetList,\r\n    getRegisteredAlbumList,\r\n    searchRegisteredAlbum,\r\n    assignAlbumsToUser,\r\n} from \"../redux/actions/users/get-data-site\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport DeleteAlbum from \"./modal-delete-album\";\r\n\r\nclass AssignAlbum extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.tmr = null;\r\n        this.state = {\r\n            all_users: '',\r\n            album_list: '',\r\n            user_id: '',\r\n            allChecked: false,\r\n            new_checked: [],\r\n            show: false,\r\n            album_ids: [],\r\n            search_id: '',\r\n\r\n            current_page: 1,\r\n            page_neighbours: 2,\r\n            pagination: 10,\r\n            page_num: '',\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const {\r\n            getAllUsers,\r\n        } = this.props;\r\n\r\n        if(getAllUsers) {\r\n            getAllUsers({role_id: localStorage.id});\r\n        }\r\n        this.onPageClick(1);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        /**\r\n         * Getting album list\r\n         */\r\n        if (this.props.get_registered_albums && this.props.get_registered_albums !== prevProps.get_registered_albums) {\r\n            this.setState({\r\n                album_list: this.props.get_registered_albums.list,\r\n                page_num: this.props.get_registered_albums.page_num,\r\n            });\r\n        }\r\n        if (this.props.msg_registered_albums && this.props.msg_registered_albums !== prevProps.msg_registered_albums) {\r\n            toast(this.props.msg_registered_albums);\r\n            const {\r\n                resetList\r\n            } = this.props;\r\n            const self = this;\r\n            clearTimeout(self.tmr);\r\n            self.tmr = setTimeout(function () {\r\n                resetList();\r\n                self.tmr = null;\r\n                self.setState({\r\n                    search_id: \"\",\r\n                })\r\n            }, 3000);\r\n        }\r\n        /**\r\n         * Getting all Users\r\n         */\r\n        if(this.props.getAll_users && this.props.getAll_users !== prevProps.getAll_users) {\r\n            this.setState({\r\n                all_users: this.props.getAll_users,\r\n            });\r\n        }\r\n        if (this.props.msg_get_users !== prevProps.msg_get_users) {\r\n            toast(this.props.msg_get_users);\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            const self = this;\r\n            clearTimeout(self.tmr);\r\n            self.tmr = setTimeout(function () {\r\n                reset();\r\n                self.tmr = null;\r\n            }, 3000);\r\n        }\r\n        /**\r\n         *  Check all\r\n         */\r\n        if(this.state.allChecked !== prevState.allChecked) {\r\n            const temp = [];\r\n            const temp_ids = [];\r\n            if(this.state.allChecked === true) {\r\n                let list =  this.state.album_list;\r\n                Object.keys(list).map((item, key) => {\r\n                    temp.push(list[key]._id);\r\n                    temp_ids.push(list[key].album_id);\r\n                    return null;\r\n                });\r\n                this.setState({\r\n                    new_checked: temp,\r\n                    album_ids: temp_ids,\r\n                })\r\n            }\r\n        }\r\n        if(this.state.new_checked !== prevState.new_checked) {\r\n            let temp = [];\r\n            let list =  this.state.album_list;\r\n            Object.keys(list).map((item, key) => {\r\n                temp.push(list[key]._id);\r\n                return null;\r\n            });\r\n            if(this.state.new_checked.length > 0 && this.state.new_checked.length === temp.length) {\r\n                this.setState({\r\n                    allChecked: true,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    allChecked: false,\r\n                })\r\n            }\r\n        }\r\n        /**\r\n         * Assigning Albums\r\n         */\r\n        if (this.props.msg_assign_albums && this.props.msg_assign_albums !== prevProps.msg_assign_albums) {\r\n            toast(this.props.msg_assign_albums);\r\n            const {\r\n                resetList\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                resetList();\r\n                this.tmr = null;\r\n            }, 3000);\r\n            this.onPageClick(1);\r\n        }\r\n        if (this.props.msg_error_assign_albums && this.props.msg_error_assign_albums !== prevProps.msg_error_assign_albums) {\r\n            toast(this.props.msg_error_assign_albums);\r\n            const {\r\n                resetList\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                resetList();\r\n                this.tmr = null;\r\n            }, 3000);\r\n        }\r\n    }\r\n    onPageClick = (item) => {\r\n        this.setState({\r\n            current_page: item,\r\n        });\r\n        const {\r\n            getRegisteredAlbumList\r\n        } = this.props;\r\n        const data = {\r\n            role_id: localStorage.id,\r\n            current_page: item,\r\n            page_neighbours: this.state.page_neighbours,\r\n            pagination: this.state.pagination,\r\n        };\r\n        if (getRegisteredAlbumList) {\r\n            getRegisteredAlbumList(data)\r\n        }\r\n        this.setState({\r\n            allChecked: false,\r\n            new_checked: [],\r\n            album_ids: [],\r\n        })\r\n    };\r\n    onSelectUser = (e) => {\r\n        if(e.target.value !== \"0\") {\r\n            this.setState({\r\n                user_id: e.target.value,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                user_id: '',\r\n            });\r\n        }\r\n    };\r\n    onCheckBox = (e, album_id) => {\r\n        const {\r\n            new_checked,\r\n            album_ids\r\n        } = this.state;\r\n        const temp = JSON.parse(JSON.stringify(new_checked));\r\n        const temp_ids = JSON.parse(JSON.stringify(album_ids));\r\n        if(e.target.checked === true){\r\n            temp.push(e.target.id);\r\n            temp_ids.push(album_id);\r\n        } else{\r\n            temp.splice(temp.indexOf(e.target.id), 1);\r\n            temp_ids.splice(temp_ids.indexOf(album_id), 1);\r\n        }\r\n\r\n        this.setState({\r\n            new_checked: temp,\r\n            album_ids: temp_ids,\r\n        });\r\n    };\r\n    onAllCheck = () => {\r\n        this.setState({\r\n            allChecked: !this.state.allChecked,\r\n            new_checked: [],\r\n            album_ids: [],\r\n        });\r\n    };\r\n    onAssign = () => {\r\n        const {\r\n            assignAlbumsToUser,\r\n        } = this.props;\r\n        if(assignAlbumsToUser) {\r\n            const data = {\r\n                role_id: localStorage.id,\r\n                publisher_id: this.state.user_id,\r\n                new_checked: this.state.new_checked,\r\n            };\r\n            assignAlbumsToUser(data);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Modal\r\n     */\r\n    onShowDeleteModal = () => {\r\n        if (this.state.album_ids.length > 0) {\r\n            this.setState({\r\n                show: true,\r\n            })\r\n        }\r\n    };\r\n    hideDeleteModal = () => {\r\n        this.setState({\r\n            user_id: '',\r\n            allChecked: false,\r\n            new_checked: [],\r\n            show: false,\r\n            album_ids: [],\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Searching\r\n     */\r\n    onAlbumId = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value || '',\r\n        })\r\n    };\r\n    onInputAlbumId = (code) => {\r\n        if (code === 13) {\r\n            if(this.state.search_id !== \"\") {\r\n                const {\r\n                    searchRegisteredAlbum,\r\n                } = this.props;\r\n                if (searchRegisteredAlbum) {\r\n                    searchRegisteredAlbum({\r\n                        role_id: localStorage.getItem('id'),\r\n                        album_id: this.state.search_id,\r\n                    })\r\n                }\r\n            } else {\r\n                this.onPageClick(1);\r\n            }\r\n            this.setState({\r\n                show: false,\r\n                new_checked: [],\r\n                album_ids: [],\r\n                allChecked: false,\r\n            });\r\n        }\r\n    };\r\n    render() {\r\n        const pageArray = [];\r\n        if(this.state.page_num) {\r\n            for (let k = this.state.page_num.start_page; k <= this.state.page_num.end_page; k ++) {\r\n                pageArray.push(k);\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"spinning-curtain\" style={{display: this.props.spinning ? \"flex\" : \"none\"}}>\r\n                    <div className=\"lds-dual-ring\"/>\r\n                </div>\r\n                <ToastContainer/>\r\n                <div className=\"col-darkBlue txt-30 txt-bold pb-20 pl-40\">\r\n                    Album list for assigning to a user\r\n                </div>\r\n                <div className=\"form-bg\">\r\n                    <div className=\"flex-space assign-unregister\">\r\n                        <div className=\"justify-left publisher-album\">\r\n                            <div className=\"justify-left\">\r\n                                <div className=\"col-buttonAndLink\">Publisher</div>\r\n                                <div>\r\n                                    <select\r\n                                        className=\"count publisher mouse-cursor\"\r\n                                        onChange={(e) => this.onSelectUser(e)}\r\n                                    >\r\n                                        <option key=\"0\" value=\"0\">None</option>\r\n                                        {\r\n                                            this.state.all_users && this.state.all_users.map((item, key) => {\r\n                                                return (\r\n                                                    <option key={key + 1} value={item._id}>\r\n                                                        {item.name}\r\n                                                    </option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"justify-left mobile-mt\">\r\n                                <div className=\"justify-center col-buttonAndLink ml-40\" style={{marginRight: 10}}>Album ID</div>\r\n                                <div className=\"mr-id-10\">\r\n                                    <input\r\n                                        id=\"search_id\"\r\n                                        className=\"count mouse-cursor\"\r\n                                        placeholder=\"Album Id\"\r\n                                        value={this.state.search_id}\r\n                                        onChange={(e) => this.onAlbumId(e)}\r\n                                        onKeyUp={e => this.onInputAlbumId(e.keyCode)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"justify-left btn-mt\">\r\n                            <div\r\n                                className=\"btn-common action assign mouse-cursor col-white\"\r\n                                onClick={this.onAssign}\r\n                            >\r\n                                Assign\r\n                            </div>\r\n                            <div\r\n                                className=\"ml-15 btn-common action assign mouse-cursor col-white\"\r\n                                onClick={this.onShowDeleteModal}\r\n                            >\r\n                                Unregister\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-p\">\r\n                        <table className=\"tList\">\r\n                            <thead>\r\n                            <tr className=\"table-list\">\r\n                                <th>No</th>\r\n                                <th>Album ID</th>\r\n                                <th>Name</th>\r\n                                <th>Artists</th>\r\n                                <th>Tracks</th>\r\n                                <th>Registered Date</th>\r\n                                <th>Image</th>\r\n                                <th>\r\n                                    <label className=\"container-event\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={this.state.allChecked}\r\n                                            onChange={this.onAllCheck}\r\n                                        />\r\n                                        <span className=\"checkMark\"/>\r\n                                    </label>\r\n                                </th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                this.state.album_list && this.state.album_list.map((item, key) => {\r\n                                    return (\r\n                                        <tr key={key} className=\"table-list\">\r\n                                            <td>{key + 1}</td>\r\n                                            <td>{this.state.album_list[key].album_id}</td>\r\n                                            <td>\r\n                                                <div dangerouslySetInnerHTML={{__html: this.state.album_list[key].name}} />\r\n                                            </td>\r\n                                            <td>{this.state.album_list[key].artists.length}</td>\r\n                                            <td>{this.state.album_list[key].tracks.length}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    new Date(this.state.album_list[key].registered_date).toLocaleString()\r\n                                                }\r\n                                            </td>\r\n                                            <td\r\n                                                className=\"mouse-cursor\"\r\n                                                onClick={() => window.location = this.state.album_list[key].path}\r\n                                            >\r\n                                                {\r\n                                                    this.state.album_list[key].thumbnail && (\r\n                                                        <img className=\"thumbnail-size\" src={this.state.album_list[key].thumbnail} alt=\"\" />\r\n                                                    )\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <label className=\"container-event\" key={key}>\r\n                                                    <input\r\n                                                        id={this.state.album_list[key]._id}\r\n                                                        type=\"checkbox\"\r\n                                                        checked={this.state.new_checked.includes(this.state.album_list[key]._id)}\r\n                                                        onChange={(e) => this.onCheckBox(e, this.state.album_list[key].album_id)}\r\n                                                    />\r\n                                                    <span className=\"checkMark\"/>\r\n                                                </label>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"help-center-align\">\r\n                        <div className=\"product-btn justify-center\" onClick={() => this.onPageClick(1)}>\r\n                            <svg width=\"11\" height=\"15\" viewBox=\"0 0 11 15\" fill=\"none\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M9.60496 14.6383C9.42024 14.6383 9.23359 14.5779 9.07773 14.457L0.923018 8.02084C0.724826 7.86414 0.609375 7.62814 0.609375 7.37704C0.609375 7.12782 0.724826 6.88993 0.923018 6.73512L9.0431 0.332906C9.40485 0.047818 9.934 0.104458 10.2246 0.459402C10.5151 0.814346 10.4574 1.33355 10.0956 1.61863L2.79141 7.37704L10.1322 13.1713C10.4939 13.4564 10.5517 13.9756 10.2611 14.3305C10.0937 14.5326 9.85126 14.6383 9.60496 14.6383Z\"\r\n                                    fill=\"black\" fillOpacity=\"0.65\"/>\r\n                            </svg>\r\n                        </div>\r\n                        {\r\n                            this.state.page_num && pageArray && pageArray.map((item, key) => {\r\n                                return (\r\n                                    <div\r\n                                        className={this.state.current_page && this.state.current_page === item ? \"product-btn justify-center btn-search\" : \"product-btn justify-center col-darkBlue\"}\r\n                                        key={key}\r\n                                        onClick={() => this.onPageClick(item)}\r\n                                    >\r\n                                        {item}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <div className=\"product-btn justify-center\"\r\n                             onClick={() => this.onPageClick(this.state.page_num.total_page)}>\r\n                            <svg width=\"11\" height=\"15\" viewBox=\"0 0 11 15\" fill=\"none\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M1.39506 14.6383C1.57978 14.6383 1.76643 14.5779 1.92229 14.457L10.077 8.02084C10.2752 7.86414 10.3906 7.62814 10.3906 7.37704C10.3906 7.12782 10.2752 6.88993 10.077 6.73512L1.95692 0.332906C1.59518 0.047818 1.06603 0.104458 0.775474 0.459402C0.484922 0.814346 0.542647 1.33355 0.904394 1.61863L8.2086 7.37704L0.867834 13.1713C0.506087 13.4564 0.448362 13.9756 0.738914 14.3305C0.906319 14.5326 1.14877 14.6383 1.39506 14.6383Z\"\r\n                                    fill=\"black\" fillOpacity=\"0.65\"/>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*  Unregister Modal  */}\r\n                <DeleteAlbum\r\n                    show={this.state.show}\r\n                    handleClose={this.hideDeleteModal}\r\n                    albums={this.state.album_ids}\r\n                    flag={ false }\r\n                    path={'/assign-album'}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        spinning: state.users.spinning,\r\n        getAll_users: state.users.getAll_users,\r\n        msg_get_users: state.users.msg_get_users,\r\n        get_registered_albums: state.users.get_registered_albums,\r\n        msg_registered_albums: state.users.msg_registered_albums,\r\n        msg_assign_albums: state.users.msg_assign_albums,\r\n        msg_error_assign_albums: state.users.msg_error_assign_albums,\r\n    }\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        reset,\r\n        getAllUsers,\r\n        resetList,\r\n        getRegisteredAlbumList,\r\n        searchRegisteredAlbum,\r\n        assignAlbumsToUser,\r\n    }\r\n)(AssignAlbum);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    resetList,\r\n    getAssignedAlbumsById,\r\n    unassignAlbumsToUser,\r\n} from \"../redux/actions/users/get-data-site\";\r\nimport {\r\n    reset,\r\n    updateAlbumPayment,\r\n} from \"../redux/actions/users/management\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst config = require(\"../config/config\");\r\n\r\nclass PublisherAlbums extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tmr = null;\r\n        this.state = {\r\n            album_list: '',\r\n            publisher_name: '',\r\n            currency: '',\r\n            paid_history: '',\r\n            allChecked: false,\r\n            new_checked: [],\r\n            current_page: 1,\r\n            page_neighbours: 2,\r\n            pagination: 10,\r\n            page_num: '',\r\n            show_flag: false,\r\n            registered_date: '',\r\n            flag_edit: '',\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.onPageClick(1);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        /**\r\n         * Getting album list\r\n         */\r\n        if (this.props.get_registered_albums && this.props.get_registered_albums !== prevProps.get_registered_albums) {\r\n            this.setState({\r\n                album_list: this.props.get_registered_albums.list,\r\n                page_num: this.props.get_registered_albums.page_num,\r\n                publisher_name: this.props.get_registered_albums.publisher_name,\r\n                paid_history: (this.props.get_registered_albums.paid_history).reverse(),\r\n                currency: this.props.get_registered_albums.currency,\r\n            });\r\n        }\r\n        if (this.props.msg_registered_albums && this.props.msg_registered_albums !== prevProps.msg_registered_albums) {\r\n            toast(this.props.msg_registered_albums);\r\n            const {\r\n                resetList\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                resetList();\r\n                this.tmr = null;\r\n            }, 3000);\r\n        }\r\n        /**\r\n         *  Check all\r\n         */\r\n        if(this.state.allChecked !== prevState.allChecked) {\r\n            const temp = [];\r\n            if(this.state.allChecked === true) {\r\n                let list =  this.state.album_list;\r\n                Object.keys(list).map((item, key) => {\r\n                    temp.push(list[key]._id);\r\n                    return null;\r\n                });\r\n                this.setState({\r\n                    new_checked: temp,\r\n                })\r\n            }\r\n        }\r\n        if(this.state.new_checked !== prevState.new_checked) {\r\n            let temp = [];\r\n            let list =  this.state.album_list;\r\n            Object.keys(list).map((item, key) => {\r\n                temp.push(list[key]._id);\r\n                return null;\r\n            });\r\n            if(this.state.new_checked.length > 0 && this.state.new_checked.length === temp.length) {\r\n                this.setState({\r\n                    allChecked: true,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    allChecked: false,\r\n                })\r\n            }\r\n        }\r\n        /**\r\n         * Assigning Albums\r\n         */\r\n        if (this.props.msg_assign_albums && this.props.msg_assign_albums !== prevProps.msg_assign_albums) {\r\n            toast(this.props.msg_assign_albums);\r\n            const {\r\n                resetList\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                resetList();\r\n                this.tmr = null;\r\n            }, 3000);\r\n            this.onPageClick(1);\r\n        }\r\n        if (this.props.msg_error_assign_albums && this.props.msg_error_assign_albums !== prevProps.msg_error_assign_albums) {\r\n            toast(this.props.msg_error_assign_albums);\r\n            const {\r\n                resetList\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                resetList();\r\n                this.tmr = null;\r\n            }, 3000);\r\n        }\r\n        if (this.props.msg_track_update && this.props.msg_track_update !== prevProps.msg_track_update) {\r\n            toast(this.props.msg_track_update);\r\n            const {\r\n                reset,\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 3000);\r\n            this.onPageClick(this.state.current_page);\r\n        }\r\n    }\r\n    onPageClick = (item) => {\r\n        this.setState({\r\n            current_page: item,\r\n        });\r\n        const {\r\n            getAssignedAlbumsById\r\n        } = this.props;\r\n\r\n        const data = {\r\n            id: this.props.match.params.id,\r\n            current_page: item,\r\n            page_neighbours: this.state.page_neighbours,\r\n            pagination: this.state.pagination,\r\n        };\r\n        if (getAssignedAlbumsById) {\r\n            getAssignedAlbumsById(data)\r\n        }\r\n        this.setState({\r\n            allChecked: false,\r\n            new_checked: [],\r\n        })\r\n    };\r\n    onCheckBox = (e) => {\r\n        const {\r\n            new_checked\r\n        } = this.state;\r\n        const temp = JSON.parse(JSON.stringify(new_checked));\r\n        if(e.target.checked === true){\r\n            temp.push(e.target.id);\r\n        } else{\r\n            temp.splice(temp.indexOf(e.target.id), 1);\r\n        }\r\n\r\n        this.setState({new_checked: temp});\r\n    };\r\n    onAllCheck = () => {\r\n        this.setState({\r\n            allChecked: !this.state.allChecked,\r\n            new_checked: [],\r\n        });\r\n    };\r\n    onAssign = () => {\r\n        const {\r\n            unassignAlbumsToUser,\r\n        } = this.props;\r\n        if(unassignAlbumsToUser) {\r\n            const data = {\r\n                role_id: localStorage.id,\r\n                publisher_id: this.state.user_id,\r\n                new_checked: this.state.new_checked,\r\n            };\r\n            unassignAlbumsToUser(data);\r\n        }\r\n    };\r\n    onView = (id) => {\r\n        this.props.history.push('/publisher/tracks/'+ this.props.match.params.id + '-' + id);\r\n    };\r\n    onShowMore = (e) => {\r\n        if(this.state.registered_date === e.registered_date) {\r\n            this.setState({\r\n                show_flag: !this.state.show_flag,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                show_flag: true,\r\n                registered_date: e.registered_date,\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Price per track\r\n     */\r\n    onEdit = (id, price) => {\r\n        this.setState({\r\n            flag_edit: id,\r\n            price: price,\r\n        })\r\n    };\r\n    onInputAlbumId = (code) => {\r\n        if (code === 13) {\r\n            this.onUpdate();\r\n        }\r\n    };\r\n    onUpdate = () => {\r\n        const {\r\n            updateAlbumPayment\r\n        } = this.props;\r\n        if(updateAlbumPayment) {\r\n            const data = {\r\n                role_id: localStorage.id,\r\n                album_id: this.state.flag_edit,\r\n                price: this.state.price,\r\n            };\r\n            updateAlbumPayment(data);\r\n        }\r\n        this.setState({\r\n            flag_edit: '',\r\n            price: '',\r\n        });\r\n    };\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value || 0,\r\n        })\r\n    };\r\n    render() {\r\n        const pageArray = [];\r\n        if(this.state.page_num) {\r\n            for (let k = this.state.page_num.start_page; k <= this.state.page_num.end_page; k ++) {\r\n                pageArray.push(k);\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"spinning-curtain\" style={{display: this.props.spinning ? \"flex\" : \"none\"}}>\r\n                    <div className=\"lds-dual-ring\"/>\r\n                </div>\r\n                <ToastContainer/>\r\n                <div className=\"col-darkBlue txt-30 txt-bold pb-20 pl-40\">\r\n                    Albums assigned to {this.state.publisher_name && this.state.publisher_name}\r\n                </div>\r\n                <div className=\"form-bg\">\r\n                    <div className=\"flex-space assign\">\r\n                        <div\r\n                            className=\"btn-common action assign mouse-cursor col-white\"\r\n                            onClick={() => this.props.history.goBack()}\r\n                        >\r\n                            Back\r\n                        </div>\r\n                        <div\r\n                            className=\"btn-common action assign mouse-cursor col-white\"\r\n                            onClick={this.onAssign}\r\n                        >\r\n                            Unassign\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-p\">\r\n                        <table className=\"tList\">\r\n                            <thead>\r\n                            <tr className=\"table-list\">\r\n                                <th>No</th>\r\n                                <th>Album ID</th>\r\n                                <th>Name</th>\r\n                                <th>Artists</th>\r\n                                <th>Tracks</th>\r\n                                <th>Assigned Date</th>\r\n                                <th>Image</th>\r\n                                <th>Price Per Track</th>\r\n                                <th>Total Amount</th>\r\n                                <th>Action</th>\r\n                                <th>\r\n                                    <label className=\"container-event\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={this.state.allChecked}\r\n                                            onChange={this.onAllCheck}\r\n                                        />\r\n                                        <span className=\"checkMark\"/>\r\n                                    </label>\r\n                                </th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                this.state.album_list && this.state.album_list.map((item, key) => {\r\n                                    return (\r\n                                        <tr key={key} className=\"table-list\">\r\n                                            <td>{key + 1}</td>\r\n                                            <td>{this.state.album_list[key].album_id}</td>\r\n                                            <td>\r\n                                                <div dangerouslySetInnerHTML={{__html: this.state.album_list[key].name}} />\r\n                                            </td>\r\n                                            <td>{this.state.album_list[key].artists.length}</td>\r\n                                            <td>{this.state.album_list[key].tracks.length}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    new Date(this.state.album_list[key].updated_date).toLocaleString()\r\n                                                }\r\n                                            </td>\r\n                                            <td\r\n                                                className=\"mouse-cursor\"\r\n                                                onClick={() => window.location = this.state.album_list[key].path}\r\n                                            >\r\n                                                {\r\n                                                    this.state.album_list[key].thumbnail && (\r\n                                                        <img loading=\"lazy\" className=\"thumbnail-size\" src={this.state.album_list[key].thumbnail} alt=\"\" />\r\n                                                    )\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                {\r\n                                                    this.state.flag_edit === item.album_id ?\r\n                                                        <input\r\n                                                            id=\"price\"\r\n                                                            type=\"Number\"\r\n                                                            className=\"price-paid\"\r\n                                                            value={this.state.price}\r\n                                                            onChange={(e) => this.onChange(e)}\r\n                                                            onKeyUp={e => this.onInputAlbumId(e.keyCode)}\r\n                                                            style={{marginTop: 25}}\r\n                                                        />\r\n                                                        :\r\n                                                        item.amount_per_one + (this.state.currency ? this.state.currency : config.SYMBOL[0])\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                {(this.state.album_list[key].total_amount? this.state.album_list[key].total_amount: 0) + (this.state.currency ? this.state.currency : config.SYMBOL[0])}\r\n                                            </td>\r\n                                            <td className=\"flex-space\">\r\n                                                {\r\n                                                    this.state.flag_edit === item.album_id?\r\n                                                        <div\r\n                                                            className=\"mr-10 mouse-cursor icon-flex tooltip\"\r\n                                                            onClick={this.onUpdate}\r\n                                                        >\r\n                                                            <img\r\n                                                                className=\"icon-size\"\r\n                                                                src={require(\"../assets/images/update.svg\")}\r\n                                                                alt=\"\" />\r\n                                                            <span className=\"tooltiptext\">Update the track payment amount</span>\r\n                                                        </div>\r\n                                                        :\r\n                                                        <div\r\n                                                            className=\"mr-10 mouse-cursor icon-flex tooltip\"\r\n                                                            onClick={(e) => this.onEdit(item.album_id, item.amount_per_one)}\r\n                                                        >\r\n                                                            <img\r\n                                                                className=\"icon-size\"\r\n                                                                src={require(\"../assets/images/edit.svg\")}\r\n                                                                alt=\"\"/>\r\n                                                            <span className=\"tooltiptext\">Edit the track</span>\r\n                                                        </div>\r\n                                                }\r\n\r\n                                                <div\r\n                                                    className=\"mr-10 mouse-cursor icon-flex tooltip\"\r\n                                                    onClick={(e) => this.onView(this.state.album_list[key].album_id)}\r\n                                                >\r\n                                                    <img\r\n                                                        className=\"icon-size\"\r\n                                                        src={require(\"../assets/images/view.svg\")}\r\n                                                        alt=\"\" />\r\n                                                    <span className=\"tooltiptext\">View the track list</span>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <label className=\"container-event\" key={key}>\r\n                                                    <input\r\n                                                        id={this.state.album_list[key]._id}\r\n                                                        type=\"checkbox\"\r\n                                                        checked={this.state.new_checked.includes(this.state.album_list[key]._id)}\r\n                                                        onChange={(e) => this.onCheckBox(e)}\r\n                                                    />\r\n                                                    <span className=\"checkMark\"/>\r\n                                                </label>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"help-center-align\">\r\n                        <div className=\"product-btn justify-center\" onClick={() => this.onPageClick(1)}>\r\n                            <svg width=\"11\" height=\"15\" viewBox=\"0 0 11 15\" fill=\"none\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M9.60496 14.6383C9.42024 14.6383 9.23359 14.5779 9.07773 14.457L0.923018 8.02084C0.724826 7.86414 0.609375 7.62814 0.609375 7.37704C0.609375 7.12782 0.724826 6.88993 0.923018 6.73512L9.0431 0.332906C9.40485 0.047818 9.934 0.104458 10.2246 0.459402C10.5151 0.814346 10.4574 1.33355 10.0956 1.61863L2.79141 7.37704L10.1322 13.1713C10.4939 13.4564 10.5517 13.9756 10.2611 14.3305C10.0937 14.5326 9.85126 14.6383 9.60496 14.6383Z\"\r\n                                    fill=\"black\" fillOpacity=\"0.65\"/>\r\n                            </svg>\r\n                        </div>\r\n\r\n                        {\r\n                            this.state.page_num && pageArray && pageArray.map((item, key) => {\r\n                                return (\r\n                                    <div\r\n                                        className={this.state.current_page && this.state.current_page === item ? \"product-btn justify-center btn-search\" : \"product-btn justify-center col-darkBlue\"}\r\n                                        key={key}\r\n                                        onClick={() => this.onPageClick(item)}\r\n                                    >\r\n                                        {item}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <div className=\"product-btn justify-center\"\r\n                             onClick={() => this.onPageClick(this.state.page_num.total_page)}>\r\n                            <svg width=\"11\" height=\"15\" viewBox=\"0 0 11 15\" fill=\"none\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M1.39506 14.6383C1.57978 14.6383 1.76643 14.5779 1.92229 14.457L10.077 8.02084C10.2752 7.86414 10.3906 7.62814 10.3906 7.37704C10.3906 7.12782 10.2752 6.88993 10.077 6.73512L1.95692 0.332906C1.59518 0.047818 1.06603 0.104458 0.775474 0.459402C0.484922 0.814346 0.542647 1.33355 0.904394 1.61863L8.2086 7.37704L0.867834 13.1713C0.506087 13.4564 0.448362 13.9756 0.738914 14.3305C0.906319 14.5326 1.14877 14.6383 1.39506 14.6383Z\"\r\n                                    fill=\"black\" fillOpacity=\"0.65\"/>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            {/*  Recent Payment History  */}\r\n                <div style={{marginTop: 70}}>\r\n                    <div className=\"pt-20 pb-20 justify-center col-selected-bg txt-20\">\r\n                        Recent Payment History to {this.state.publisher_name && this.state.publisher_name}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-bg\">\r\n                    <div className=\"table-p\">\r\n                        <table className=\"tList\">\r\n                            <thead>\r\n                            <tr className=\"table-list\">\r\n                                <th>No</th>\r\n                                <th>Paid Amount</th>\r\n                                <th>Registered Date</th>\r\n                                <th>Paid Date</th>\r\n                                <th>Comment</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                this.state.paid_history && this.state.paid_history.map((item, key) => {\r\n                                    console.log(item);\r\n                                    return (\r\n                                        <tr key={key} className=\"table-list\">\r\n                                            <td>{key + 1}</td>\r\n                                            <td>{item.paid_amount + (this.state.currency ? this.state.currency : config.SYMBOL[0])}</td>\r\n                                            <td>{new Date(item.registered_date).toLocaleString()}</td>\r\n                                            <td>{new Date(item.paid_date).toLocaleString()}</td>\r\n                                            <td className=\"txt-word\">\r\n                                                {\r\n                                                    item.paid_comment.length <= 40?\r\n                                                        item.paid_comment\r\n                                                        :\r\n                                                        <div>\r\n                                                            {\r\n                                                                this.state.show_flag && this.state.registered_date === item.registered_date?\r\n                                                                    item.paid_comment + \"   \"\r\n                                                                    :\r\n                                                                    item.paid_comment.slice(0, 40) + \" ... \"\r\n                                                            }\r\n                                                            <span\r\n                                                                className=\"txt-14 col-heavyDark mouse-cursor under-line\"\r\n                                                                onClick={(e) => this.onShowMore(item)}\r\n                                                            >\r\n                                                                {\r\n                                                                    this.state.show_flag && this.state.registered_date === item.registered_date?\r\n                                                                        \"Less\"\r\n                                                                        :\r\n                                                                        \"Show More\"\r\n                                                                }\r\n                                                            </span>\r\n                                                        </div>\r\n                                                }\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        spinning: state.users.spinning,\r\n        get_registered_albums: state.users.get_registered_albums,\r\n        msg_registered_albums: state.users.msg_registered_albums,\r\n\r\n        msg_assign_albums: state.users.msg_assign_albums,\r\n        msg_error_assign_albums: state.users.msg_error_assign_albums,\r\n        msg_track_update: state.users.msg_track_update,\r\n    }\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        reset,\r\n        resetList,\r\n        getAssignedAlbumsById,\r\n        unassignAlbumsToUser,\r\n        updateAlbumPayment,\r\n    }\r\n)(PublisherAlbums);","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport \"../assets/css/dashboard.css\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    reset,\r\n    getTrackListById,\r\n    addPaymentInfo,\r\n    updateTrackPayment,\r\n} from \"../redux/actions/users/management\";\r\nconst config = require(\"../config/config\");\r\n\r\nclass PublisherTracks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tmr = null;\r\n        this.state = {\r\n            listById: '',\r\n            user_id: '',\r\n            album_id: '',\r\n            flag_edit: '',\r\n            price: '',\r\n            currency: '',\r\n            table_show: true,\r\n            detail_show: false,\r\n            detail_item: '',\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getInitialTrackList();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.get_track_list && this.props.get_track_list !== prevProps.get_track_list) {\r\n            this.setState({\r\n                listById: this.props.get_track_list,\r\n                currency: this.props.get_track_list.currency,\r\n            });\r\n            console.log(this.props.get_track_list);\r\n        }\r\n        if (this.props.msg_error_tracks && this.props.msg_error_tracks !== prevProps.msg_error_tracks) {\r\n            toast(this.props.msg_error_tracks);\r\n            const {\r\n                reset,\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 3000);\r\n        }\r\n        if (this.props.msg_track_update && this.props.msg_track_update !== prevProps.msg_track_update) {\r\n            toast(this.props.msg_track_update);\r\n            const {\r\n                reset,\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 3000);\r\n            this.getInitialTrackList();\r\n        }\r\n    }\r\n    getInitialTrackList = () => {\r\n        let path = this.props.match.params.slug;\r\n        let array = path.split(\"-\");\r\n        const {\r\n            getTrackListById\r\n        } = this.props;\r\n        if (getTrackListById) {\r\n            const data = {\r\n                user_id: array[0],\r\n                album_id: array[1],\r\n                role: localStorage.getItem(\"role\"),\r\n            };\r\n            getTrackListById(data);\r\n            this.setState({\r\n                user_id: array[0],\r\n                album_id: array[1],\r\n            })\r\n        }\r\n    };\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value || 0,\r\n        })\r\n    };\r\n    onEdit = (flag, price) => {\r\n        this.setState({\r\n            flag_edit: flag,\r\n            price: price,\r\n        })\r\n    };\r\n    onUpdate = () => {\r\n        const {\r\n            updateTrackPayment\r\n        } = this.props;\r\n        if(updateTrackPayment) {\r\n            const data = {\r\n                role_id: localStorage.id,\r\n                track_name: this.state.flag_edit,\r\n                album_id: this.state.album_id,\r\n                price: this.state.price,\r\n            };\r\n            updateTrackPayment(data);\r\n        }\r\n        this.setState({\r\n            flag_edit: '',\r\n            price: '',\r\n        });\r\n    };\r\n    onExtraClick = () => {\r\n        /**\r\n         * extra\r\n         */\r\n        const {\r\n            addPaymentInfo\r\n        } = this.props;\r\n        if(addPaymentInfo) {\r\n            const data = {\r\n                album_id: 82559,//this.state.album_id,\r\n                track_url: \"/singles/michoel-schnitzler---eluku-dmeir-aneini.mp3\",//this.state.flag_edit,\r\n                platform: '',\r\n                version: '',\r\n            };\r\n            addPaymentInfo(data);\r\n            console.log(data);\r\n        }\r\n    };\r\n    onShowTableContents = () => {\r\n        this.setState({\r\n            table_show: !this.state.table_show,\r\n        })\r\n    };\r\n    onShowDetail = (item) => {\r\n        this.setState({\r\n            table_show: false,\r\n            detail_show: true,\r\n            detail_item: item,\r\n        })\r\n    };\r\n    onInputAlbumId = (code) => {\r\n        if (code === 13) {\r\n            this.onUpdate();\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"spinning-curtain\" style={{display: this.props.spinning ? \"flex\" : \"none\"}}>\r\n                    <div className=\"lds-dual-ring\"/>\r\n                </div>\r\n                <ToastContainer />\r\n                <div className=\"col-darkBlue txt-30 txt-bold pb-20 pl-40\">\r\n                    Track List\r\n                </div>\r\n                <div className=\"form-bg\">\r\n                    <div className=\"flex-space album-list\">\r\n                        <div\r\n                            className=\"btn-common action mouse-cursor col-white mr-id-10\"\r\n                            onClick={() => this.props.history.goBack()}\r\n                        >\r\n                            Back\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.listById && (\r\n                            <div className=\"flex-grid2 album-grid\">\r\n                                <div className=\"album-grid-mt\">\r\n                                    <img\r\n                                        className=\"album-img mouse-cursor\"\r\n                                        src={this.state.listById.album.full_thumbnail}\r\n                                        onClick={() => window.location = this.state.listById.album.path}\r\n                                        alt=\"\" />\r\n                                </div>\r\n                                <div className=\"album-grid-mt justify-center col-darkBlue\">\r\n                                    <div>\r\n                                        <div className=\"justify-center\">\r\n                                            <img\r\n                                                className=\"album-thumbnail-img mouse-cursor\"\r\n                                                src={this.state.listById.album.thumbnail}\r\n                                                onClick={() => window.location = this.state.listById.album.path}\r\n                                                alt=\"\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"pt-10 justify-center txt-bold txt-20\">\r\n                                            Title:\r\n                                        </div>\r\n                                        <div className=\"justify-center\">\r\n                                            <div dangerouslySetInnerHTML={{__html: this.state.listById.album.name}} />\r\n                                        </div>\r\n                                        <div className=\"pt-10 justify-center txt-bold txt-20\">\r\n                                            Artists:\r\n                                        </div>\r\n                                        <table className=\"tList\">\r\n                                            <thead>\r\n                                            <tr className=\"table-list album\">\r\n                                                <th>No</th>\r\n                                                <th>Id</th>\r\n                                                <th>Name</th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {\r\n                                                this.state.listById && this.state.listById.album.artists.map((item, key) => {\r\n                                                    return (\r\n                                                        <tr key={key}>\r\n                                                            <td>{key + 1}</td>\r\n                                                            <td>\r\n                                                                {item.id}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <div dangerouslySetInnerHTML={{__html: item.title}} />\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <div>\r\n                        <div className=\"pt-30 pb-10 justify-center col-paragraphBg txt-20\">Tracks</div>\r\n                    </div>\r\n                    <div className=\"table-p\">\r\n                        <table className=\"tList\">\r\n                            <thead className=\"track-list\">\r\n                            <tr\r\n                                className=\"table-list album mouse-cursor\"\r\n                                onClick={this.onShowTableContents}\r\n                            >\r\n                                <th>No</th>\r\n                                <th>Title</th>\r\n                                <th>Url</th>\r\n                                <th>Download</th>\r\n                                <th>Current Price(Usd)</th>\r\n                                <th>Total Amount</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                            </thead>\r\n                            {\r\n                                this.state.table_show &&\r\n                                <tbody>\r\n                                {\r\n                                    this.state.listById && this.state.listById.tracks.map((item, key) => {\r\n                                        return (\r\n                                            <tr key={key} className=\"table-list album\">\r\n                                                <td>{key + 1}</td>\r\n                                                <td>\r\n                                                    <div dangerouslySetInnerHTML={{__html: item.name}} />\r\n                                                </td>\r\n                                                <td>{item.url}</td>\r\n                                                <td>{item.download === \"\" || item.download === null? 0: item.download}</td>\r\n                                                <td>\r\n                                                    {\r\n                                                        this.state.flag_edit === item.name?\r\n                                                            <input\r\n                                                                id=\"price\"\r\n                                                                type=\"Number\"\r\n                                                                className=\"price-paid\"\r\n                                                                value={this.state.price}\r\n                                                                onChange={(e) => this.onChange(e)}\r\n                                                                onKeyUp={e => this.onInputAlbumId(e.keyCode)}\r\n                                                                style={{marginTop: 25}}\r\n                                                            />\r\n                                                            :\r\n                                                            item.amount_per_one + (this.state.currency ? this.state.currency : config.SYMBOL[0])                                                    }\r\n                                                </td>\r\n                                                <td>\r\n                                                    {(item.total_amount? item.total_amount: 0) + (this.state.currency ? this.state.currency : config.SYMBOL[0])       }\r\n                                                </td>\r\n                                                <td className=\"flex-space\">\r\n                                                    {\r\n                                                        this.state.flag_edit === item.name?\r\n                                                            <div\r\n                                                                className=\"mr-10 mouse-cursor icon-flex tooltip\"\r\n                                                                onClick={this.onUpdate}\r\n                                                            >\r\n                                                                <img\r\n                                                                    className=\"icon-size\"\r\n                                                                    src={require(\"../assets/images/update.svg\")}\r\n                                                                    alt=\"\" />\r\n                                                                <span className=\"tooltiptext\">Update the track payment amount</span>\r\n                                                            </div>\r\n                                                            :\r\n                                                            <div\r\n                                                                className=\"mr-10 mouse-cursor icon-flex tooltip\"\r\n                                                                onClick={(e) => this.onEdit(item.name, item.amount_per_one)}\r\n                                                            >\r\n                                                                <img\r\n                                                                    className=\"icon-size\"\r\n                                                                    src={require(\"../assets/images/edit.svg\")}\r\n                                                                    alt=\"\"/>\r\n                                                                <span className=\"tooltiptext\">Edit the track</span>\r\n                                                            </div>\r\n                                                    }\r\n\r\n                                                    {/*extra click*/}\r\n                                                    <div\r\n                                                        className=\"mr-10 mouse-cursor icon-flex tooltip\"\r\n                                                        onClick={() => this.onExtraClick()}\r\n                                                    >\r\n                                                        <img\r\n                                                            className=\"icon-size\"\r\n                                                            src={require(\"../assets/images/view.svg\")}\r\n                                                            alt=\"\" />\r\n                                                        <span className=\"tooltiptext\">Click for recording the price per track</span>\r\n                                                    </div>\r\n                                                    {/*View*/}\r\n                                                    <div\r\n                                                        className=\"mr-10 mouse-cursor icon-flex tooltip\"\r\n                                                        onClick={(e) => this.onShowDetail(item)}\r\n                                                    >\r\n                                                        <img\r\n                                                            className=\"icon-size\"\r\n                                                            src={require(\"../assets/images/view.svg\")}\r\n                                                            alt=\"\" />\r\n                                                        <span className=\"tooltiptext\">View the detailed info</span>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </tbody>\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                    {/* Detail Show*/}\r\n                    {\r\n                        this.state.detail_show &&\r\n                            <>\r\n                                <div style={{marginTop: 70}}>\r\n                                    <div className=\"pt-20 pb-20 justify-center col-selected-bg txt-20\">\r\n                                        Detailed view of track \"{this.state.detail_item.name}\"\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mt-30 justify-center col-darkBlue txt-bold txt-20\">Track History</div>\r\n                                <div className=\"table-p\">\r\n                                    <table className=\"tList\">\r\n                                        <thead className=\"track-list\">\r\n                                        <tr\r\n                                            className=\"table-list album\"\r\n                                        >\r\n                                            <th>No</th>\r\n                                            <th>Country</th>\r\n                                            <th>Ip Address</th>\r\n                                            <th>Platform</th>\r\n                                            <th>Version</th>\r\n                                            <th>Price Per Played Track</th>\r\n                                            <th>Played Date</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {\r\n                                            this.state.detail_item.details.map((item, key) => {\r\n                                                return (\r\n                                                    <tr key={key}>\r\n                                                        <td style={{paddingLeft: 20}}>{key + 1}</td>\r\n                                                        <td>{item.country}</td>\r\n                                                        <td>{item.ip_address}</td>\r\n                                                        <td>{item.platform? item.platform: ''}</td>\r\n                                                        <td>{item.version? item.version: ''}</td>\r\n                                                        <td>{(item.price_per_track) + (this.state.currency ? this.state.currency : config.SYMBOL[0])}</td>\r\n                                                        <td>\r\n                                                            {\r\n                                                                new Date(item.played_date).toLocaleString([], {\r\n                                                                    year: 'numeric',\r\n                                                                    month: 'short',\r\n                                                                    day: '2-digit',\r\n                                                                    hour: '2-digit',\r\n                                                                    minute: '2-digit',\r\n                                                                })\r\n                                                            }\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </>\r\n                    }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        spinning: state.users.spinning,\r\n        get_track_list: state.users.get_track_list,\r\n        msg_error_tracks: state.users.msg_error_tracks,\r\n\r\n        msg_track_update: state.users.msg_track_update,\r\n    }\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        reset,\r\n        getTrackListById,\r\n        updateTrackPayment,\r\n        /**\r\n         * Extra\r\n         */\r\n        addPaymentInfo,\r\n    }\r\n)(PublisherTracks);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    resetList,\r\n    getAssignedAlbumsById,\r\n} from \"../../redux/actions/users/get-data-site\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst config = require(\"../../config/config\");\r\n\r\nclass UserReports extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.tmr = null;\r\n        this.state = {\r\n            album_list: '',\r\n            currency: '',\r\n\r\n            current_page: 1,\r\n            page_neighbours: 2,\r\n            pagination: 10,\r\n            page_num: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!localStorage.id) {\r\n            window.location.href = '/login';\r\n        }\r\n        this.onPageClick(1);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        /**\r\n         * Getting album list\r\n         */\r\n        if (this.props.get_registered_albums && this.props.get_registered_albums !== prevProps.get_registered_albums) {\r\n            this.setState({\r\n                album_list: this.props.get_registered_albums.list,\r\n                currency: this.props.get_registered_albums.currency,\r\n                page_num: this.props.get_registered_albums.page_num,\r\n            });\r\n\r\n            console.log(this.props.get_registered_albums)\r\n        }\r\n        if (this.props.msg_registered_albums && this.props.msg_registered_albums !== prevProps.msg_registered_albums) {\r\n            toast(this.props.msg_registered_albums);\r\n            const {\r\n                resetList\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                resetList();\r\n                this.tmr = null;\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    onPageClick = (item) => {\r\n        this.setState({\r\n            current_page: item,\r\n        });\r\n\r\n        const {\r\n            getAssignedAlbumsById\r\n        } = this.props;\r\n\r\n        const data = {\r\n            id: localStorage.id,\r\n            current_page: item,\r\n            page_neighbours: this.state.page_neighbours,\r\n            pagination: this.state.pagination,\r\n        };\r\n\r\n        if (getAssignedAlbumsById) {\r\n            getAssignedAlbumsById(data)\r\n        }\r\n        this.setState({\r\n            allChecked: false,\r\n            new_checked: [],\r\n        })\r\n    };\r\n\r\n    onView = (id) => {\r\n        this.props.history.push('/user-track-list/' + id);\r\n    };\r\n\r\n    render() {\r\n        const pageArray = [];\r\n        if(this.state.page_num) {\r\n            for (let k = this.state.page_num.start_page; k <= this.state.page_num.end_page; k ++) {\r\n                pageArray.push(k);\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"spinning-curtain\" style={{display: this.props.spinning ? \"flex\" : \"none\"}}>\r\n                    <div className=\"lds-dual-ring\"/>\r\n                </div>\r\n                <ToastContainer/>\r\n                <div className=\"col-darkBlue txt-30 txt-bold pb-20 pl-40\">\r\n                    Assigned Albums\r\n                </div>\r\n                <div className=\"form-bg\">\r\n                    <div className=\"flex-space assign\">\r\n                        <div\r\n                            className=\"btn-common action assign mouse-cursor col-white\"\r\n                            onClick={() => this.props.history.goBack()}\r\n                        >\r\n                            Back\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-p\">\r\n                        <table className=\"tList\">\r\n                            <thead>\r\n                            <tr className=\"table-list\">\r\n                                <th>No</th>\r\n                                <th>Album ID</th>\r\n                                <th>Name</th>\r\n                                <th>Artists</th>\r\n                                <th>Tracks</th>\r\n                                <th>Assigned Date</th>\r\n                                <th>Image</th>\r\n                                <th>Total Amount</th>\r\n                                <th>View</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                this.state.album_list && this.state.album_list.map((item, key) => {\r\n                                    return (\r\n                                        <tr key={key} className=\"table-list\">\r\n                                            <td>{key + 1}</td>\r\n                                            <td>{this.state.album_list[key].album_id}</td>\r\n                                            <td>\r\n                                                <div dangerouslySetInnerHTML={{__html: this.state.album_list[key].name}} />\r\n                                            </td>\r\n                                            <td>{this.state.album_list[key].artists.length}</td>\r\n                                            <td>{this.state.album_list[key].tracks.length}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    new Date(this.state.album_list[key].updated_date).toLocaleString()\r\n                                                }\r\n                                            </td>\r\n                                            <td\r\n                                                className=\"mouse-cursor\"\r\n                                                onClick={() => window.location = this.state.album_list[key].path}\r\n                                            >\r\n                                                {\r\n                                                    this.state.album_list[key].thumbnail && (\r\n                                                        <img className=\"thumbnail-size\" src={this.state.album_list[key].thumbnail} alt=\"\" />\r\n                                                    )\r\n                                                }\r\n                                            </td>\r\n                                            <td className=\"col-heavyDark txt-bold\">\r\n                                                {\r\n                                                    this.state.album_list[key].total_amount + (this.state.currency ? this.state.currency : config.SYMBOL[0])\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <div\r\n                                                    className=\"mr-10 mouse-cursor icon-flex tooltip\"\r\n                                                    onClick={(e) => this.onView(this.state.album_list[key].album_id.toString())}\r\n                                                >\r\n                                                    <img\r\n                                                        className=\"icon-size\"\r\n                                                        src={require(\"../../assets/images/view.svg\")}\r\n                                                        alt=\"\" />\r\n                                                    <span className=\"tooltiptext\">View the track list</span>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div className=\"help-center-align\">\r\n                        <div className=\"product-btn justify-center\" onClick={() => this.onPageClick(1)}>\r\n                            <svg width=\"11\" height=\"15\" viewBox=\"0 0 11 15\" fill=\"none\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M9.60496 14.6383C9.42024 14.6383 9.23359 14.5779 9.07773 14.457L0.923018 8.02084C0.724826 7.86414 0.609375 7.62814 0.609375 7.37704C0.609375 7.12782 0.724826 6.88993 0.923018 6.73512L9.0431 0.332906C9.40485 0.047818 9.934 0.104458 10.2246 0.459402C10.5151 0.814346 10.4574 1.33355 10.0956 1.61863L2.79141 7.37704L10.1322 13.1713C10.4939 13.4564 10.5517 13.9756 10.2611 14.3305C10.0937 14.5326 9.85126 14.6383 9.60496 14.6383Z\"\r\n                                    fill=\"black\" fillOpacity=\"0.65\"/>\r\n                            </svg>\r\n                        </div>\r\n                        {\r\n                            this.state.page_num && pageArray && pageArray.map((item, key) => {\r\n                                return (\r\n                                    <div\r\n                                        className={this.state.current_page && this.state.current_page === item ? \"product-btn justify-center btn-search\" : \"product-btn justify-center col-darkBlue\"}\r\n                                        key={key}\r\n                                        onClick={() => this.onPageClick(item)}\r\n                                    >\r\n                                        {item}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <div className=\"product-btn justify-center\"\r\n                             onClick={() => this.onPageClick(this.state.page_num.total_page)}>\r\n                            <svg width=\"11\" height=\"15\" viewBox=\"0 0 11 15\" fill=\"none\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M1.39506 14.6383C1.57978 14.6383 1.76643 14.5779 1.92229 14.457L10.077 8.02084C10.2752 7.86414 10.3906 7.62814 10.3906 7.37704C10.3906 7.12782 10.2752 6.88993 10.077 6.73512L1.95692 0.332906C1.59518 0.047818 1.06603 0.104458 0.775474 0.459402C0.484922 0.814346 0.542647 1.33355 0.904394 1.61863L8.2086 7.37704L0.867834 13.1713C0.506087 13.4564 0.448362 13.9756 0.738914 14.3305C0.906319 14.5326 1.14877 14.6383 1.39506 14.6383Z\"\r\n                                    fill=\"black\" fillOpacity=\"0.65\"/>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        spinning: state.users.spinning,\r\n        get_registered_albums: state.users.get_registered_albums,\r\n        msg_registered_albums: state.users.msg_registered_albums,\r\n\r\n        msg_assign_albums: state.users.msg_assign_albums,\r\n        msg_error_assign_albums: state.users.msg_error_assign_albums,\r\n    }\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        resetList,\r\n        getAssignedAlbumsById,\r\n    }\r\n)(UserReports);","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport '../../assets/css/dashboard.css';\r\nimport {\r\n    reset,\r\n    getPublisherById,\r\n} from \"../../redux/actions/users/publisher\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst config = require(\"../../config/config\");\r\n\r\nclass UserPayment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tmr = null;\r\n        this.state = {\r\n            paid_history: '',\r\n            currency: '',\r\n            show_flag: false,\r\n            registered_date: '',\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const {\r\n            getPublisherById,\r\n        } = this.props;\r\n        if(getPublisherById) {\r\n            const data = {\r\n                id: localStorage.id,\r\n            };\r\n            getPublisherById(data);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.msg_user && this.props.msg_user !== prevProps.msg_user) {\r\n            toast(this.props.msg_user);\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 2000);\r\n            this.onInitial();\r\n        }\r\n        if (this.props.get_user && this.props.get_user !== prevProps.get_user) {\r\n            this.setState({\r\n                paid_history: this.props.get_user.paid_log.reverse(),\r\n                currency: this.props.get_user.currency,\r\n            })\r\n        }\r\n    }\r\n\r\n    exportTableToCSV = (filename) => {\r\n        let csv = [];\r\n        let rows = document.querySelectorAll(\"table tr\");\r\n        for (let i = 0; i < rows.length; i++) {\r\n            let row = [], cols = rows[i].querySelectorAll(\"td, th\");\r\n            for (let j = 0; j < cols.length; j++)\r\n                row.push(cols[j].innerText);\r\n            csv.push(row.join(\",\"));\r\n        }\r\n        this.downloadCSV(csv.join(\"\\n\"), filename);\r\n    };\r\n    downloadCSV = (csv, filename) => {\r\n        let csvFile;\r\n        let downloadLink;\r\n        csvFile = new Blob([csv], {type: \"text/csv\"});\r\n        downloadLink = document.createElement(\"a\");\r\n        downloadLink.download = filename;\r\n        downloadLink.href = window.URL.createObjectURL(csvFile);\r\n        downloadLink.style.display = \"none\";\r\n        document.body.appendChild(downloadLink);\r\n        downloadLink.click();\r\n    };\r\n    onShowMore = (e) => {\r\n        if(this.state.registered_date === e.registered_date) {\r\n            this.setState({\r\n                show_flag: !this.state.show_flag,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                show_flag: true,\r\n                registered_date: e.registered_date,\r\n            });\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <ToastContainer />\r\n                <div className=\"col-darkBlue txt-30 txt-bold pb-20 pl-40\">\r\n                    Payment History\r\n                </div>\r\n                <div className=\"form-bg\">\r\n                    {\r\n                        this.props.get_user &&\r\n                            <div className=\"flex-space txt-18 col-heavyDark\">\r\n                                <div className=\"justify-left\">\r\n                                    <div>Owed Amount: </div>\r\n                                    <div className=\"txt-bold\" style={{paddingLeft: 20}}>\r\n                                        {\r\n                                            this.props.get_user.owed_amount + (this.state.currency ? this.state.currency : config.SYMBOL[0])\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"justify-left\">\r\n                                    <div>Total Amount: </div>\r\n                                    <div className=\"txt-bold\" style={{paddingLeft: 20}}>\r\n                                        {\r\n                                            this.props.get_user.total_amount + (this.state.currency ? this.state.currency : config.SYMBOL[0])\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                    <div className=\"table-p\">\r\n                        <table className=\"tList\">\r\n                            <thead>\r\n                            <tr className=\"table-list\">\r\n                                <th>No</th>\r\n                                <th>Paid Amount</th>\r\n                                <th>Registered Date</th>\r\n                                <th>Paid Date</th>\r\n                                <th>Comment</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                this.state.paid_history && this.state.paid_history.map((item, key) => {\r\n                                    console.log(item);\r\n                                    return (\r\n                                        <tr key={key} className=\"table-list\">\r\n                                            <td>{key + 1}</td>\r\n                                            <td>{item.paid_amount + (this.state.currency ? this.state.currency : config.SYMBOL[0])}</td>\r\n                                            <td>{new Date(item.registered_date).toLocaleString()}</td>\r\n                                            <td>{new Date(item.paid_date).toLocaleString()}</td>\r\n                                            <td className=\"txt-word\">\r\n                                                {\r\n                                                    item.paid_comment.length <= 40?\r\n                                                        item.paid_comment\r\n                                                        :\r\n                                                        <div>\r\n                                                            {\r\n                                                                this.state.show_flag && this.state.registered_date === item.registered_date?\r\n                                                                    item.paid_comment + \"   \"\r\n                                                                    :\r\n                                                                    item.paid_comment.slice(0, 40) + \" ... \"\r\n                                                            }\r\n                                                            <span\r\n                                                                className=\"txt-14 col-heavyDark mouse-cursor under-line\"\r\n                                                                onClick={(e) => this.onShowMore(item)}\r\n                                                            >\r\n                                                                {\r\n                                                                    this.state.show_flag && this.state.registered_date === item.registered_date?\r\n                                                                        \"Less\"\r\n                                                                        :\r\n                                                                        \"Show More\"\r\n                                                                }\r\n                                                            </span>\r\n                                                        </div>\r\n                                                }\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"flex-space mt-30\">\r\n                        <div\r\n                            className=\"btn-common action assign mouse-cursor col-white\"\r\n                            onClick={() => window.print(\"\")}\r\n                        >\r\n                            Print\r\n                        </div>\r\n                        <div\r\n                            className=\"btn-common action assign mouse-cursor col-white\"\r\n                            onClick={() => this.exportTableToCSV('members.csv')}\r\n                        >\r\n                            CSV\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        spinning: state.users.spinning,\r\n        get_user: state.users.get_user,\r\n        msg_user: state.users.msg_user,\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        reset,\r\n        getPublisherById,\r\n    }\r\n)(UserPayment);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport \"../../assets/css/dashboard.css\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    reset,\r\n    getTrackListById,\r\n} from \"../../redux/actions/users/management\";\r\nconst config = require(\"../../config/config\");\r\n\r\nclass UserTrackList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tmr = null;\r\n        this.state = {\r\n            role: localStorage.role,\r\n            user_id: localStorage.id,\r\n            listById: '',\r\n            currency: '',\r\n\r\n            table_show: true,\r\n            detail_show: false,\r\n            detail_item: '',\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getInitialTrackList();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.get_track_list && this.props.get_track_list !== prevProps.get_track_list) {\r\n            this.setState({\r\n                listById: this.props.get_track_list,\r\n                currency: this.props.get_track_list.currency,\r\n            });\r\n        }\r\n        if (this.props.msg_error_tracks && this.props.msg_error_tracks !== prevProps.msg_error_tracks) {\r\n            toast(this.props.msg_error_tracks);\r\n            const {\r\n                reset,\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 3000);\r\n        }\r\n    }\r\n    getInitialTrackList = () => {\r\n        const {\r\n            getTrackListById\r\n        } = this.props;\r\n        if (getTrackListById) {\r\n            let path = this.props.match.params && this.props.match.params.id;\r\n            const data = {\r\n                user_id: this.state.user_id,\r\n                album_id: path,\r\n                role: localStorage.getItem(\"role\"),\r\n            };\r\n            getTrackListById(data);\r\n        }\r\n    };\r\n    onShowTableContents = () => {\r\n        this.setState({\r\n            table_show: !this.state.table_show,\r\n        })\r\n    };\r\n    onShowDetail = (item) => {\r\n        this.setState({\r\n            table_show: false,\r\n            detail_show: true,\r\n            detail_item: item,\r\n        })\r\n    };\r\n    exportTableToCSV = (filename) => {\r\n        let csv = [];\r\n        let rows = document.querySelectorAll(\"table tr\");\r\n        for (let i = 0; i < rows.length; i++) {\r\n            let row = [], cols = rows[i].querySelectorAll(\"td, th\");\r\n\r\n            for (let j = 0; j < cols.length; j++)\r\n                row.push(cols[j].innerText);\r\n\r\n            csv.push(row.join(\",\"));\r\n        }\r\n        // Download CSV file\r\n        this.downloadCSV(csv.join(\"\\n\"), filename);\r\n    };\r\n    downloadCSV = (csv, filename) => {\r\n        let csvFile;\r\n        let downloadLink;\r\n        // CSV file\r\n        csvFile = new Blob([csv], {type: \"text/csv\"});\r\n        // Download link\r\n        downloadLink = document.createElement(\"a\");\r\n        // File name\r\n        downloadLink.download = filename;\r\n        // Create a link to the file\r\n        downloadLink.href = window.URL.createObjectURL(csvFile);\r\n        // Hide download link\r\n        downloadLink.style.display = \"none\";\r\n        // Add the link to DOM\r\n        document.body.appendChild(downloadLink);\r\n        // Click download link\r\n        downloadLink.click();\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"spinning-curtain\" style={{display: this.props.spinning ? \"flex\" : \"none\"}}>\r\n                    <div className=\"lds-dual-ring\"/>\r\n                </div>\r\n                <ToastContainer />\r\n                <div className=\"col-darkBlue txt-30 txt-bold pb-20 pl-40\">\r\n                    Track List\r\n                </div>\r\n                <div className=\"form-bg\">\r\n                    <div className=\"flex-space album-list\">\r\n                        <div\r\n                            className=\"btn-common action mouse-cursor col-white mr-id-10\"\r\n                            onClick={() => this.props.history.goBack()}\r\n                        >\r\n                            Back\r\n                        </div>\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.listById && (\r\n                            <div className=\"flex-grid2 album-grid\">\r\n                                <div className=\"album-grid-mt\">\r\n                                    <img\r\n                                        className=\"album-img mouse-cursor\"\r\n                                        src={this.state.listById.album.full_thumbnail}\r\n                                        onClick={() => window.location = this.state.listById.album.path}\r\n                                        alt=\"\" />\r\n                                </div>\r\n                                <div className=\"album-grid-mt justify-center col-darkBlue\">\r\n                                    <div>\r\n                                        <div className=\"justify-center\">\r\n                                            <img\r\n                                                className=\"album-thumbnail-img mouse-cursor\"\r\n                                                src={this.state.listById.album.thumbnail}\r\n                                                onClick={() => window.location = this.state.listById.album.path}\r\n                                                alt=\"\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"pt-10 justify-center txt-bold txt-20\">\r\n                                            Title:\r\n                                        </div>\r\n                                        <div className=\"justify-center\">\r\n                                            <div dangerouslySetInnerHTML={{__html: this.state.listById.album.name}} />\r\n                                        </div>\r\n                                        <div className=\"pt-10 justify-center txt-bold txt-20\">\r\n                                            Artists:\r\n                                        </div>\r\n                                        <table className=\"tList\">\r\n                                            <thead>\r\n                                            <tr className=\"table-list album\">\r\n                                                <th>No</th>\r\n                                                <th>Id</th>\r\n                                                <th>Name</th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {\r\n                                                this.state.listById && this.state.listById.album.artists.map((item, key) => {\r\n                                                    return (\r\n                                                        <tr key={key} className=\"align-left\">\r\n                                                            <td style={{paddingLeft: 20}}>\r\n                                                                {key + 1}\r\n                                                            </td>\r\n                                                            <td style={{paddingLeft: 20}}>\r\n                                                                {item.id}\r\n                                                            </td>\r\n                                                            <td style={{paddingLeft: 20}}>\r\n                                                                {item.title}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <div>\r\n                        <div className=\"pt-30 pb-10 justify-center col-paragraphBg txt-20\">Tracks</div>\r\n                    </div>\r\n                    <div className=\"table-p\">\r\n                        <table className=\"tList\">\r\n                            <thead>\r\n                            <tr\r\n                                className=\"table-list album mouse-cursor\"\r\n                                onClick={this.onShowTableContents}\r\n                            >\r\n                                <th>No</th>\r\n                                <th>Title</th>\r\n                                <th>Download</th>\r\n                                <th>Current Price(Usd)</th>\r\n                                <th>Total Amount</th>\r\n                                <th>Detail View</th>\r\n                            </tr>\r\n                            </thead>\r\n                            {\r\n                                this.state.table_show &&\r\n                                <tbody>\r\n                                {\r\n                                    this.state.listById && this.state.listById.tracks.map((item, key) => {\r\n                                        return (\r\n                                            <tr key={key} className=\"table-list album\">\r\n                                                <td>{key + 1}</td>\r\n                                                <td>\r\n                                                    <div dangerouslySetInnerHTML={{__html: item.name}} />\r\n                                                </td>\r\n                                                <td>{item.download === \"\" || item.download === null? 0: item.download}</td>\r\n                                                <td>{item.amount_per_one + (this.state.currency ? this.state.currency : config.SYMBOL[0])}</td>\r\n                                                <td>{(item.total_amount? item.total_amount: 0) + (this.state.currency ? this.state.currency : config.SYMBOL[0])}</td>\r\n                                                <td>\r\n                                                    <div\r\n                                                        className=\"mr-10 mouse-cursor icon-flex tooltip\"\r\n                                                        onClick={(e) => this.onShowDetail(item)}\r\n                                                    >\r\n                                                        <img\r\n                                                            className=\"icon-size\"\r\n                                                            src={require(\"../../assets/images/view.svg\")}\r\n                                                            alt=\"\" />\r\n                                                        <span className=\"tooltiptext\">View the detailed info</span>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </tbody>\r\n                            }\r\n                        </table>\r\n                    </div>\r\n\r\n                    {/* Detail Show*/}\r\n                    {\r\n                        this.state.detail_show &&\r\n                        <>\r\n                            <div style={{marginTop: 70}}>\r\n                                <div className=\"pt-20 pb-20 justify-center col-selected-bg txt-20\">\r\n                                    Detailed view of track \"{this.state.detail_item.name}\"\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mt-30 justify-center col-darkBlue txt-bold txt-20\">Track History</div>\r\n                            <div className=\"table-p\">\r\n                                <table className=\"tList\">\r\n                                    <thead className=\"track-list\">\r\n                                    <tr\r\n                                        className=\"table-list album\"\r\n                                    >\r\n                                        <th>No</th>\r\n                                        <th>Country</th>\r\n                                        <th>Ip Address</th>\r\n                                        <th>Platform</th>\r\n                                        <th>Version</th>\r\n                                        <th>Price Per Played Track</th>\r\n                                        <th>Played Date</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {\r\n                                        this.state.detail_item.details.map((item, key) => {\r\n                                            return (\r\n                                                <tr key={key}>\r\n                                                    <td style={{paddingLeft: 20}}>{key + 1}</td>\r\n                                                    <td>{item.country}</td>\r\n                                                    <td>{item.ip_address}</td>\r\n                                                    <td>{item.platform? item.platform: ''}</td>\r\n                                                    <td>{item.version? item.version: ''}</td>\r\n                                                    <td>{item.price_per_track  + (this.state.currency ? this.state.currency : config.SYMBOL[0])}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            new Date(item.played_date).toLocaleString([], {\r\n                                                                year: 'numeric',\r\n                                                                month: 'short',\r\n                                                                day: '2-digit',\r\n                                                                hour: '2-digit',\r\n                                                                minute: '2-digit',\r\n                                                            })\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            {/*  CSV & Print Download  */}\r\n                            <div className=\"flex-space mt-30\">\r\n                                <div\r\n                                    className=\"btn-common action assign mouse-cursor col-white\"\r\n                                    onClick={() => window.print(\"\")}\r\n                                >\r\n                                    Print\r\n                                </div>\r\n                                <div\r\n                                    className=\"btn-common action assign mouse-cursor col-white\"\r\n                                    onClick={() => this.exportTableToCSV('members.csv')}\r\n                                >\r\n                                    CSV\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        spinning: state.users.spinning,\r\n        get_track_list: state.users.get_track_list,\r\n        msg_error_tracks: state.users.msg_error_tracks,\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        reset,\r\n        getTrackListById,\r\n    }\r\n)(UserTrackList);","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport '../../assets/css/dashboard.css';\r\nimport {\r\n    reset,\r\n    updatePublisher,\r\n    getPublisherById,\r\n} from \"../../redux/actions/users/publisher\";\r\nimport CountriesList from \"../../components/country-list\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst config = require(\"../../config/config\");\r\n\r\nclass UserSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tmr = null;\r\n        this.state = {\r\n            user_edit: '',\r\n            name: '',\r\n            phone: '',\r\n            email: '',\r\n            password: '',\r\n            confirm_password: '',\r\n            country: 'US',\r\n            bank_info: '',\r\n            currency_type: config.SYMBOL[0],\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const {\r\n            getPublisherById,\r\n        } = this.props;\r\n        if(getPublisherById) {\r\n            const data = {\r\n                id: localStorage.id,\r\n            };\r\n            getPublisherById(data);\r\n        }\r\n        this.onInitial();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.msg_create_publisher && prevProps.msg_create_publisher !== this.props.msg_create_publisher) {\r\n            toast(this.props.msg_create_publisher);\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 2000);\r\n            this.onInitial();\r\n        }\r\n        if(this.props.msg_publisher_error && prevProps.msg_publisher_error !== this.props.msg_publisher_error) {\r\n            console.log(this.props.msg_publisher_error);\r\n            let msg = this.props.msg_publisher_error;\r\n            let msg_array = [];\r\n            if (msg.name) {\r\n                msg_array.push(msg.name);\r\n            }\r\n            if (msg.phone) {\r\n                msg_array.push(msg.phone);\r\n            }\r\n            if (msg.email) {\r\n                msg_array.push(msg.email);\r\n            }\r\n            if (msg.password) {\r\n                msg_array.push(msg.password);\r\n            }\r\n            if (msg.confirm_password) {\r\n                msg_array.push(msg.confirm_password);\r\n            }\r\n            if (msg.country) {\r\n                msg_array.push(msg.country);\r\n            }\r\n            if (msg.bank_info) {\r\n                msg_array.push(msg.bank_info);\r\n            }\r\n            if(msg_array.length === 0) {\r\n                toast(this.props.msg_publisher_error);\r\n            } else {\r\n                for (let k = 0; k < msg_array.length; k ++) {\r\n                    toast(msg_array[k]);\r\n                }\r\n            }\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 6000);\r\n        }\r\n\r\n        if(this.props.msg_user && this.props.msg_user !== prevProps.msg_user) {\r\n            toast(this.props.msg_user);\r\n            const {\r\n                reset\r\n            } = this.props;\r\n            clearTimeout(this.tmr);\r\n            this.tmr = setTimeout(function () {\r\n                reset();\r\n                this.tmr = null;\r\n            }, 2000);\r\n            this.onInitial();\r\n        }\r\n        if (this.props.get_user && this.props.get_user !== prevProps.get_user) {\r\n            let user = this.props.get_user;\r\n            this.setState({\r\n                user_edit: user,\r\n                name: user.name,\r\n                phone: user.phone,\r\n                email: user.email,\r\n                password: user.origin_password,\r\n                confirm_password: user.origin_password,\r\n                country: user.country,\r\n                bank_info: user.bank_info,\r\n                currency: user.currency ? user.currency : config.SYMBOL[0],\r\n            })\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value || '',\r\n        })\r\n    };\r\n    onPhoneChange = (e) => {\r\n        this.setState({[e.target.id]: parseFloat(e.target.value || 0)});\r\n    };\r\n    onInitial = () => {\r\n        this.setState({\r\n            name: this.state.user_edit.name,\r\n            phone: this.state.user_edit.phone,\r\n            email: this.state.user_edit.email,\r\n            password: this.state.user_edit.origin_password,\r\n            confirm_password: this.state.user_edit.origin_password,\r\n            country: this.state.user_edit.country,\r\n            bank_info: this.state.user_edit.bank_info,\r\n            currency: this.state.user_edit.currency ? this.state.user_edit.currency : config.SYMBOL[0],\r\n        })\r\n    };\r\n    onClickInitial = () => {\r\n        this.setState({\r\n            name: this.state.user_edit.name,\r\n            phone: this.state.user_edit.phone,\r\n            email: this.state.user_edit.email,\r\n            password: this.state.user_edit.origin_password,\r\n            confirm_password: this.state.user_edit.origin_password,\r\n            country: this.state.user_edit.country,\r\n            bank_info: this.state.user_edit.bank_info,\r\n            currency: this.state.user_edit.currency ? this.state.user_edit.currency : config.SYMBOL[0],\r\n        })\r\n    };\r\n    onSelectCountry = (e) => {\r\n        this.setState({\r\n            country: e.target.value,\r\n        });\r\n    };\r\n    onUpdate = () => {\r\n        const {\r\n            updatePublisher\r\n        } = this.props;\r\n\r\n        if(updatePublisher) {\r\n            const data = {\r\n                id: localStorage.id,\r\n                name: this.state.name,\r\n                phone: this.state.phone,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                confirm_password: this.state.confirm_password,\r\n                country: this.state.country,\r\n                bank_info: this.state.bank_info,\r\n                currency: this.state.currency_type,\r\n            };\r\n            updatePublisher(data);\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <ToastContainer />\r\n                <div className=\"col-darkBlue txt-30 txt-bold pb-20 pl-40\">\r\n                    Edit Profile\r\n                </div>\r\n                <div className=\"form-bg\">\r\n                    <input\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        className=\"mt-20\"\r\n                        placeholder=\"User Name\"\r\n                        value={this.state.name}\r\n                        onChange={(e) => this.onChange(e)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        id=\"phone\"\r\n                        type=\"tel\"\r\n                        className=\"mt-20\"\r\n                        placeholder=\"Phone Number\"\r\n                        value={this.state.phone}\r\n                        onChange={(e) => this.onPhoneChange(e)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        className=\"mt-20\"\r\n                        placeholder=\"Email\"\r\n                        value={this.state.email}\r\n                        onChange={(e) => this.onChange(e)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        className=\"mt-20\"\r\n                        placeholder=\"Password\"\r\n                        value={this.state.password}\r\n                        onChange={(e) => this.onChange(e)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        id=\"confirm_password\"\r\n                        type=\"password\"\r\n                        className=\"mt-20\"\r\n                        placeholder=\"Confirm Password\"\r\n                        value={this.state.confirm_password}\r\n                        onChange={(e) => this.onChange(e)}\r\n                        required\r\n                    />\r\n                    <select\r\n                        className=\"mt-20\"\r\n                        value={this.state.country}\r\n                        onChange={(e) => this.onSelectCountry(e)}\r\n                    >\r\n                        <CountriesList/>\r\n                    </select>\r\n                    <input\r\n                        id=\"bank_info\"\r\n                        type=\"text\"\r\n                        className=\"mt-20\"\r\n                        placeholder=\"Bank Information\"\r\n                        value={this.state.bank_info}\r\n                        onChange={(e) => this.onChange(e)}\r\n                        required\r\n                    />\r\n                    <div className=\"flex-space fields\">\r\n                        <div className=\"flex-space fields mt-20\">\r\n                            <div className=\"btn-common cancel col-white mouse-cursor action\" onClick={this.props.history.goBack}>BACK</div>\r\n                            <div className=\"btn-common initial col-white mouse-cursor action\" onClick={this.onClickInitial}>INITIALIZE</div>\r\n                        </div>\r\n                        <div className=\"btn-common save col-white mouse-cursor\" onClick={this.onUpdate}>\r\n                            UPDATE\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        spinning: state.users.spinning,\r\n        msg_create_publisher: state.users.msg_create_publisher,\r\n        msg_publisher_error: state.users.msg_publisher_error,\r\n        get_user: state.users.get_user,\r\n        msg_user: state.users.msg_user,\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        reset,\r\n        updatePublisher,\r\n        getPublisherById,\r\n    }\r\n)(UserSettings);","import React, {Component} from 'react';\r\nimport {Redirect, Switch} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport PrivateRoute from \"./private-route\";\r\nimport Header from \"./header\";\r\nimport AddUser from \"./add-user\";\r\nimport UserList from \"./user-list\";\r\nimport AddAlbum from \"./add-album\";\r\nimport AssignAlbum from \"./assign-album\";\r\nimport PublisherAlbums from \"./publisher-album-list\";\r\nimport PublisherTracks from \"./publisher-track-list\";\r\nimport UserReports from \"./user/user-reports\";\r\nimport UserAgreement from \"./user/user-payment\";\r\nimport UserTrackList from \"./user/user-track-list\";\r\nimport UserSettings from \"./user/user-settings\";\r\n\r\nclass Body extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role: localStorage.role,\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={\"spinning-curtain\"} style={{display: this.props.spinning ? \"flex\" : \"none\"}}>\r\n                    <div className=\"lds-dual-ring\"/>\r\n                </div>\r\n                <Header/>\r\n\r\n                <div className=\"body-section\">\r\n                    {\r\n                        this.state.role === 'admin' &&\r\n                        <Switch>\r\n                            <PrivateRoute\r\n                                path='/assign-album'\r\n                                component={AssignAlbum}\r\n                            />\r\n                            <PrivateRoute\r\n                                path='/add-album'\r\n                                component={AddAlbum}\r\n                            />\r\n                            <PrivateRoute\r\n                                path='/add-user/:id?'\r\n                                component={AddUser}\r\n                            />\r\n                            <PrivateRoute\r\n                                path='/user-list'\r\n                                component={UserList}\r\n                            />\r\n                            <PrivateRoute\r\n                                path='/publisher/albums/:id'\r\n                                component={PublisherAlbums}\r\n                            />\r\n                            <PrivateRoute\r\n                                path='/publisher/tracks/:slug'\r\n                                component={PublisherTracks}\r\n                            />\r\n                            <Redirect\r\n                                to='/user-list'\r\n                            />\r\n                        </Switch>\r\n                    }\r\n                    {\r\n                        this.state.role === 'publisher' &&\r\n                        <Switch>\r\n                            <PrivateRoute\r\n                                path='/user-reports'\r\n                                component={UserReports}\r\n                            />\r\n                            <PrivateRoute\r\n                                path='/user-agreement'\r\n                                component={UserAgreement}\r\n                            />\r\n                            <PrivateRoute\r\n                                path='/user-track-list/:id'\r\n                                component={UserTrackList}\r\n                            />\r\n                            <PrivateRoute\r\n                                path='/user-settings'\r\n                                component={UserSettings}\r\n                            />\r\n                            <Redirect\r\n                                to='/user-reports'\r\n                            />\r\n                        </Switch>\r\n                    }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n    }\r\n)(Body);\r\n","import React, { Component } from 'react';\nimport {Route, Switch, Redirect, BrowserRouter as Router} from \"react-router-dom\";\n\nimport Login from \"./components/login\";\n// import ForgotPassword from \"./components/forgot-password\";\n// import Register from \"./components/registration\";\nimport PrivateRoute from \"./components/private-route\";\nimport Body from \"./components/body\";\n// import ResetPassword from \"./components/reset-password\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            role: localStorage.role,\n        }\n    }\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path=\"/login\" component={Login} key=\"login\" />\n                    {/* <Route exact path=\"/forgot-password\" component={ForgotPassword} key=\"forgotPassword\" />\n                    <Route exact path=\"/reset-password/:id\" component={ResetPassword} key=\"resetPassword\" />\n                    <Route exact path=\"/register\" component={Register} key=\"register\" /> */}\n                    <PrivateRoute\n                        path=''\n                        component={Body}\n                    />\n                    {/*{*/}\n                    {/*    this.state.role === 'admin'?*/}\n                    {/*        <Redirect*/}\n                    {/*            to='/user-list'*/}\n                    {/*        />*/}\n                    {/*        :*/}\n                    {/*        <Redirect*/}\n                    {/*            to='/user-reports'*/}\n                    {/*        />*/}\n                    {/*}*/}\n                    <Redirect\n                        to='/'\n                    />\n                </Switch>\n            </Router>\n        );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport '../src/assets/css/index.css';\nimport {store} from \"./redux/storeConfig/store\";\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\nserviceWorker.unregister();","module.exports = {\r\n    CURRENCY: [ 'USD', 'GBP', 'ILS', 'EUR', ],\r\n    SYMBOL: [ '$', '£', '₪', '€' ],\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/view.3c72ec83.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.4b0979d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/bin-28.cf3887f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/update.e592830f.svg\";"],"sourceRoot":""}